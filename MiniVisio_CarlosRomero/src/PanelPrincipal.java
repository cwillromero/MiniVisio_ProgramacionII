
import java.awt.Color;
import java.awt.Cursor;
import java.awt.GraphicsEnvironment;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Will
 */
public class PanelPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form PanelPrincipal
     */
    public PanelPrincipal() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        this.getContentPane().setBackground(Color.BLACK);
        jpBase0.setVisible(false);
        jpDiseno.setVisible(false);
        jpTexto.setVisible(false);
        mEdiciontx.setVisible(false);
        mDiseno.setVisible(false);
        txConfiguracion.setEditable(false);
        txConfiguracion.setEnabled(false);
        jpPropiedadesClase.setVisible(false);
        jmPropiedades.setVisible(false);
        jmPropiedades.setEnabled(false);
        jmiAbrir.setEnabled(false);
        jmiGuardarComo.setEnabled(false);
        jmiGuardar.setEnabled(false);
        jmiAbrir.setEnabled(false);
        jmiImprimir.setEnabled(false);
        txNombreAtributo.setText("â€ƒ");
        jcb_variables2.setVisible(false);
        jLabel46.setVisible(false);
        jcb_impresion.setVisible(false);
        jbAgregarVariableAImpresion.setVisible(false);
        jLabel52.setVisible(false);
        jlbwhile.setVisible(false);
        jcb_whileV1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ppMenu = new javax.swing.JPopupMenu();
        jmiCopiar1 = new javax.swing.JMenuItem();
        miEliminar = new javax.swing.JMenuItem();
        jmiCambiarTexto = new javax.swing.JMenuItem();
        jmiCambiarColor = new javax.swing.JMenuItem();
        jmiColorTexto = new javax.swing.JMenuItem();
        jmiCambiarFuente = new javax.swing.JMenuItem();
        jmiAgregar = new javax.swing.JMenuItem();
        jmiVerPropiedades = new javax.swing.JMenuItem();
        jdNuevo = new javax.swing.JDialog();
        btNuevoDiagramaDeFlujo = new javax.swing.JButton();
        jbtDiagramaClases = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ppMenuClases = new javax.swing.JPopupMenu();
        jmiCopiar = new javax.swing.JMenuItem();
        jmiEliminarArbol = new javax.swing.JMenuItem();
        jmiEliminarNodo = new javax.swing.JMenuItem();
        jmiAtributos = new javax.swing.JMenuItem();
        jmiMetodos = new javax.swing.JMenuItem();
        jmiColorClase = new javax.swing.JMenuItem();
        jmiFuente = new javax.swing.JMenuItem();
        jdCodigo = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        taCodigo = new javax.swing.JTextArea();
        jbGuardarCodigo = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jdAgregarAtributo = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jcEncapsulamiento = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jcTipoAtributo = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txNombreAtributo = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jdAgregarMetodo = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jcParametros = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        jcTipoMetodo = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txNombreMetodo = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jbAgregarMetodo = new javax.swing.JButton();
        jdParametro = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        txNombreParametro = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jbAgregarParametro = new javax.swing.JButton();
        jcTipoParametro = new javax.swing.JComboBox<>();
        jMenuItem2 = new javax.swing.JMenuItem();
        jdHerencia = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jcpadre = new javax.swing.JComboBox<>();
        jcHijo = new javax.swing.JComboBox<>();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        jppPegar = new javax.swing.JPopupMenu();
        jmiPegar = new javax.swing.JMenuItem();
        jdAgregarVariable = new javax.swing.JDialog();
        jpVariable = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jcTipoVariable = new javax.swing.JComboBox<>();
        jLabel41 = new javax.swing.JLabel();
        txNombreVariable = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jd_desicion = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jcbRelacion = new javax.swing.JComboBox<>();
        jcb_variables = new javax.swing.JComboBox<>();
        jLabel42 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jcb_variables1 = new javax.swing.JComboBox<>();
        jbGuardarIf = new javax.swing.JButton();
        jbAnd = new javax.swing.JButton();
        jbOr = new javax.swing.JButton();
        jcb_variables2 = new javax.swing.JComboBox<>();
        jLabel46 = new javax.swing.JLabel();
        txtIf = new javax.swing.JTextField();
        jdImpresion = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jbAgregarVariableAImpresion = new javax.swing.JButton();
        jcb_impresion = new javax.swing.JComboBox<>();
        jLabel52 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ta_impresion = new javax.swing.JTextArea();
        jbGuardarImpresion = new javax.swing.JButton();
        ppImpresion = new javax.swing.JPopupMenu();
        jmiAgregarVariable = new javax.swing.JMenuItem();
        jdProceso = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jcb_operacion = new javax.swing.JComboBox<>();
        OPA = new javax.swing.JLabel();
        jbGuardarImpresion1 = new javax.swing.JButton();
        jcb_proceso2 = new javax.swing.JComboBox<>();
        OPV1 = new javax.swing.JLabel();
        jcb_Proceso = new javax.swing.JComboBox<>();
        OPV = new javax.swing.JLabel();
        txtOperacion = new javax.swing.JTextField();
        jcb_variableIgual = new javax.swing.JComboBox<>();
        OPV2 = new javax.swing.JLabel();
        jdWhile = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jbGuardarImpresion2 = new javax.swing.JButton();
        jcb_while2 = new javax.swing.JComboBox<>();
        jlbwhile = new javax.swing.JLabel();
        jcb_whileV1 = new javax.swing.JComboBox<>();
        jLabel58 = new javax.swing.JLabel();
        jcbRelacionWhile = new javax.swing.JComboBox<>();
        jcb_whileV = new javax.swing.JComboBox<>();
        txtWhile = new javax.swing.JTextField();
        jpTexto = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jbSetTexto = new javax.swing.JButton();
        sptamanio = new javax.swing.JSpinner();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jpPropiedadesClase = new javax.swing.JPanel();
        jbVerMetodos = new javax.swing.JButton();
        jbVerAtributo = new javax.swing.JButton();
        jbMetodo = new javax.swing.JButton();
        jbAtributo = new javax.swing.JButton();
        jbColorClase = new javax.swing.JButton();
        jbFuenteClase = new javax.swing.JButton();
        stamanioclase = new javax.swing.JSpinner();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jpDiseno = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbAPropiedades = new javax.swing.JButton();
        jmiPropiedades1 = new javax.swing.JButton();
        jbVerP = new javax.swing.JButton();
        jpBase0 = new javax.swing.JPanel();
        PanelClase = new javax.swing.JPanel();
        txtConfiguracion = new javax.swing.JLabel();
        txSeleccionado1 = new javax.swing.JTextField();
        btSeparador1 = new javax.swing.JButton();
        btSeparadorV1 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        btClase = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txConfiguracion = new javax.swing.JTextArea();
        jLabel21 = new javax.swing.JLabel();
        jbHerencia = new javax.swing.JButton();
        PanelFlujo = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        btProceso = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btInicio = new javax.swing.JButton();
        btWhile = new javax.swing.JButton();
        btDatos = new javax.swing.JButton();
        btSeparador = new javax.swing.JButton();
        btDesicion = new javax.swing.JButton();
        btSeparadorV = new javax.swing.JButton();
        btImpresion = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txSeleccionado = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jpBase = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbFondo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mbPrincipal = new javax.swing.JMenuBar();
        mArchivo = new javax.swing.JMenu();
        jmiNuevo = new javax.swing.JMenuItem();
        jmiAbrir = new javax.swing.JMenuItem();
        jmiGuardar = new javax.swing.JMenuItem();
        jmiGuardarComo = new javax.swing.JMenuItem();
        jmiImprimir = new javax.swing.JMenuItem();
        jmiCodigo = new javax.swing.JMenuItem();
        jmiAcercaDe = new javax.swing.JMenuItem();
        mEdiciontx = new javax.swing.JMenu();
        mDiseno = new javax.swing.JMenu();
        jmPropiedades = new javax.swing.JMenu();

        jmiCopiar1.setText("Copiar ");
        jmiCopiar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCopiar1ActionPerformed(evt);
            }
        });
        ppMenu.add(jmiCopiar1);

        miEliminar.setText("Eliminar");
        miEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEliminarActionPerformed(evt);
            }
        });
        ppMenu.add(miEliminar);

        jmiCambiarTexto.setText("Cambiar Texto");
        jmiCambiarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCambiarTextoActionPerformed(evt);
            }
        });
        ppMenu.add(jmiCambiarTexto);

        jmiCambiarColor.setText("Cambiar Color del Componente");
        jmiCambiarColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCambiarColorActionPerformed(evt);
            }
        });
        ppMenu.add(jmiCambiarColor);

        jmiColorTexto.setText("Cambiar Color de Texto");
        jmiColorTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiColorTextoActionPerformed(evt);
            }
        });
        ppMenu.add(jmiColorTexto);

        jmiCambiarFuente.setText("Cambiar Fuente de Texto");
        jmiCambiarFuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCambiarFuenteActionPerformed(evt);
            }
        });
        ppMenu.add(jmiCambiarFuente);

        jmiAgregar.setText("Agregar Propiedad");
        jmiAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAgregarActionPerformed(evt);
            }
        });
        ppMenu.add(jmiAgregar);

        jmiVerPropiedades.setText("Ver Propiedades");
        jmiVerPropiedades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiVerPropiedadesActionPerformed(evt);
            }
        });
        ppMenu.add(jmiVerPropiedades);

        jdNuevo.setTitle("Nuevo");
        jdNuevo.setBackground(new java.awt.Color(0, 0, 102));
        jdNuevo.setMinimumSize(new java.awt.Dimension(600, 400));
        jdNuevo.getContentPane().setLayout(null);

        btNuevoDiagramaDeFlujo.setBackground(new java.awt.Color(255, 255, 255));
        btNuevoDiagramaDeFlujo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/DiagramaDeFlujo.png"))); // NOI18N
        btNuevoDiagramaDeFlujo.setMaximumSize(new java.awt.Dimension(153, 153));
        btNuevoDiagramaDeFlujo.setMinimumSize(new java.awt.Dimension(153, 153));
        btNuevoDiagramaDeFlujo.setPreferredSize(new java.awt.Dimension(153, 153));
        btNuevoDiagramaDeFlujo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btNuevoDiagramaDeFlujoMouseClicked(evt);
            }
        });
        btNuevoDiagramaDeFlujo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoDiagramaDeFlujoActionPerformed(evt);
            }
        });
        jdNuevo.getContentPane().add(btNuevoDiagramaDeFlujo);
        btNuevoDiagramaDeFlujo.setBounds(50, 130, 170, 160);

        jbtDiagramaClases.setBackground(new java.awt.Color(255, 255, 255));
        jbtDiagramaClases.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Diagrama de Clases.png"))); // NOI18N
        jbtDiagramaClases.setMaximumSize(new java.awt.Dimension(153, 153));
        jbtDiagramaClases.setMinimumSize(new java.awt.Dimension(153, 153));
        jbtDiagramaClases.setPreferredSize(new java.awt.Dimension(153, 153));
        jbtDiagramaClases.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtDiagramaClasesMouseClicked(evt);
            }
        });
        jdNuevo.getContentPane().add(jbtDiagramaClases);
        jbtDiagramaClases.setBounds(350, 130, 170, 160);

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Diagrama de Clases");
        jdNuevo.getContentPane().add(jLabel4);
        jLabel4.setBounds(350, 110, 170, 20);

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Diagrama de Flujo");
        jdNuevo.getContentPane().add(jLabel5);
        jLabel5.setBounds(50, 110, 170, 20);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo.PNG"))); // NOI18N
        jLabel3.setToolTipText("Mini Visio Carlos Romero");
        jLabel3.setFocusable(false);
        jdNuevo.getContentPane().add(jLabel3);
        jLabel3.setBounds(230, 10, 136, 71);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jmiCopiar.setText("Copiar ");
        jmiCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCopiarActionPerformed(evt);
            }
        });
        ppMenuClases.add(jmiCopiar);

        jmiEliminarArbol.setText("Eliminar Componente");
        jmiEliminarArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEliminarArbolActionPerformed(evt);
            }
        });
        ppMenuClases.add(jmiEliminarArbol);

        jmiEliminarNodo.setText("Eliminar Metodo/Atributo");
        jmiEliminarNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEliminarNodoActionPerformed(evt);
            }
        });
        ppMenuClases.add(jmiEliminarNodo);

        jmiAtributos.setText("Ver y Agregar Atributos");
        jmiAtributos.setActionCommand("");
        jmiAtributos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAtributosActionPerformed(evt);
            }
        });
        ppMenuClases.add(jmiAtributos);

        jmiMetodos.setText("Ver y Agregar MÃ©todos");
        jmiMetodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMetodosActionPerformed(evt);
            }
        });
        ppMenuClases.add(jmiMetodos);

        jmiColorClase.setText("Cambiar Color de Clase");
        jmiColorClase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiColorClaseActionPerformed(evt);
            }
        });
        ppMenuClases.add(jmiColorClase);

        jmiFuente.setText("Cambiar Fuente");
        jmiFuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFuenteActionPerformed(evt);
            }
        });
        ppMenuClases.add(jmiFuente);

        jdCodigo.setTitle("CÃ³digo");
        jdCodigo.setMinimumSize(new java.awt.Dimension(800, 700));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 650));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 650));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 650));

        taCodigo.setEditable(false);
        taCodigo.setColumns(20);
        taCodigo.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        taCodigo.setRows(5);
        jScrollPane3.setViewportView(taCodigo);

        jbGuardarCodigo.setBackground(new java.awt.Color(0, 51, 51));
        jbGuardarCodigo.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jbGuardarCodigo.setForeground(new java.awt.Color(102, 255, 204));
        jbGuardarCodigo.setText("Guardar CÃ³digo");
        jbGuardarCodigo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbGuardarCodigoMouseClicked(evt);
            }
        });
        jbGuardarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarCodigoActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 204, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("CÃ³digo Generado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 311, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(290, 290, 290))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jbGuardarCodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbGuardarCodigo)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jdCodigoLayout = new javax.swing.GroupLayout(jdCodigo.getContentPane());
        jdCodigo.getContentPane().setLayout(jdCodigoLayout);
        jdCodigoLayout.setHorizontalGroup(
            jdCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jdCodigoLayout.setVerticalGroup(
            jdCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdCodigoLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        jdAgregarAtributo.setTitle("Atributo");
        jdAgregarAtributo.setBackground(new java.awt.Color(204, 204, 255));
        jdAgregarAtributo.setMinimumSize(new java.awt.Dimension(300, 300));
        jdAgregarAtributo.setSize(new java.awt.Dimension(300, 300));
        jdAgregarAtributo.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcEncapsulamiento.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jcEncapsulamiento.setForeground(new java.awt.Color(51, 0, 51));
        jcEncapsulamiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "private", "public", "protected" }));
        jcEncapsulamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcEncapsulamientoActionPerformed(evt);
            }
        });
        jPanel2.add(jcEncapsulamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 162, 20));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Nombre de Atributo:");
        jPanel2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 130, 20));

        jcTipoAtributo.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jcTipoAtributo.setForeground(new java.awt.Color(51, 0, 51));
        jcTipoAtributo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "int", "long", "float", "double", "string", "bool", "char", "wchar_t" }));
        jPanel2.add(jcTipoAtributo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 162, 20));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Atributos");
        jPanel2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 114, 20));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Encapsulamiento:");
        jPanel2.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 114, 20));

        txNombreAtributo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txNombreAtributoMouseClicked(evt);
            }
        });
        jPanel2.add(txNombreAtributo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 260, -1));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Tipo de Atributo:");
        jLabel25.setName("hahsadbsnbdnbsdnbavnbdnasbdnbasndbvsnabvdnbsavdnbsa"); // NOI18N
        jPanel2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 114, 20));

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 0, 51));
        jButton2.setText("Agregar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, -1, -1));

        jdAgregarAtributo.getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 300));

        jdAgregarMetodo.setTitle("MÃ©todo");
        jdAgregarMetodo.setBackground(new java.awt.Color(204, 204, 255));
        jdAgregarMetodo.setSize(new java.awt.Dimension(300, 300));
        jdAgregarMetodo.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(51, 0, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcParametros.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jcParametros.setForeground(new java.awt.Color(51, 0, 51));
        jcParametros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Agregar ParÃ¡metro" }));
        jcParametros.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcParametrosItemStateChanged(evt);
            }
        });
        jPanel3.add(jcParametros, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 162, 20));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Nombre de MÃ©todo:");
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 130, 20));

        jcTipoMetodo.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jcTipoMetodo.setForeground(new java.awt.Color(51, 0, 51));
        jcTipoMetodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "void", "int", "long", "float", "double", "bool", "char", "string", "wchar_t" }));
        jPanel3.add(jcTipoMetodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 162, 20));

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("MÃ©todos");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 114, 20));

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("ParÃ¡metros:");
        jPanel3.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 114, 20));

        txNombreMetodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txNombreMetodoMouseClicked(evt);
            }
        });
        jPanel3.add(txNombreMetodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 260, -1));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Tipo de MÃ©todo");
        jPanel3.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 114, 20));

        jbAgregarMetodo.setBackground(new java.awt.Color(204, 204, 255));
        jbAgregarMetodo.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jbAgregarMetodo.setForeground(new java.awt.Color(51, 0, 51));
        jbAgregarMetodo.setText("Agregar");
        jbAgregarMetodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbAgregarMetodoMouseClicked(evt);
            }
        });
        jPanel3.add(jbAgregarMetodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, -1, -1));

        jdAgregarMetodo.getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 300));

        jdParametro.setTitle("ParÃ¡metros");
        jdParametro.setMinimumSize(new java.awt.Dimension(300, 200));
        jdParametro.setResizable(false);
        jdParametro.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Nombre de ParÃ¡metro:");
        jPanel4.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 130, 20));

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("ParÃ¡metro");
        jPanel4.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, 114, 20));

        txNombreParametro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txNombreParametroMouseClicked(evt);
            }
        });
        jPanel4.add(txNombreParametro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 260, -1));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Tipo de ParÃ¡metro:");
        jPanel4.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 114, 20));

        jbAgregarParametro.setBackground(new java.awt.Color(204, 204, 255));
        jbAgregarParametro.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jbAgregarParametro.setForeground(new java.awt.Color(51, 0, 51));
        jbAgregarParametro.setText("Agregar");
        jbAgregarParametro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbAgregarParametroMouseClicked(evt);
            }
        });
        jbAgregarParametro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarParametroActionPerformed(evt);
            }
        });
        jPanel4.add(jbAgregarParametro, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, -1, -1));

        jcTipoParametro.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jcTipoParametro.setForeground(new java.awt.Color(51, 0, 51));
        jcTipoParametro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "int", "long", "float", "double", "string", "bool", "char", "wchar_t" }));
        jPanel4.add(jcTipoParametro, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 150, 20));

        jdParametro.getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 210));

        jMenuItem2.setText("jMenuItem2");

        jdHerencia.setTitle("Herencia");
        jdHerencia.setMinimumSize(new java.awt.Dimension(300, 300));
        jdHerencia.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.setMaximumSize(new java.awt.Dimension(300, 300));
        jPanel5.setMinimumSize(new java.awt.Dimension(300, 300));
        jPanel5.setPreferredSize(new java.awt.Dimension(300, 300));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.add(jcpadre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 260, -1));

        jPanel5.add(jcHijo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 260, -1));

        jLabel37.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel37.setText("Clase Hijo:");
        jPanel5.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 51, 51));
        jLabel38.setText("Herencia");
        jPanel5.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        jButton4.setBackground(new java.awt.Color(0, 51, 51));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Herencia");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jPanel5.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, -1, -1));

        jLabel39.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel39.setText("Clase Padre:");
        jPanel5.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jdHerencia.getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jmiPegar.setText("Pegar");
        jmiPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPegarActionPerformed(evt);
            }
        });
        jppPegar.add(jmiPegar);

        jdAgregarVariable.setTitle("Variables");
        jdAgregarVariable.setBackground(new java.awt.Color(204, 204, 255));
        jdAgregarVariable.setSize(new java.awt.Dimension(300, 300));
        jdAgregarVariable.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpVariable.setBackground(new java.awt.Color(0, 0, 0));
        jpVariable.setMaximumSize(new java.awt.Dimension(272, 100));
        jpVariable.setMinimumSize(new java.awt.Dimension(272, 100));
        jpVariable.setPreferredSize(new java.awt.Dimension(272, 100));
        jpVariable.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Nombre de Variable:");
        jpVariable.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 130, 20));

        jcTipoVariable.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jcTipoVariable.setForeground(new java.awt.Color(51, 0, 51));
        jcTipoVariable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "int", "long", "float", "double", "string", "bool", "char", "wchar_t" }));
        jpVariable.add(jcTipoVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 162, 20));

        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("Variables");
        jpVariable.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 114, 20));

        txNombreVariable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txNombreVariableMouseClicked(evt);
            }
        });
        jpVariable.add(txNombreVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 260, -1));

        jLabel43.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("Tipo de Variable:");
        jLabel43.setName("hahsadbsnbdnbsdnbavnbdnasbdnbasndbvsnabvdnbsavdnbsa"); // NOI18N
        jpVariable.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 114, 20));

        jButton6.setBackground(new java.awt.Color(204, 204, 255));
        jButton6.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(51, 0, 51));
        jButton6.setText("Agregar");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jpVariable.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, -1, -1));

        jdAgregarVariable.getContentPane().add(jpVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 190));

        jPanel6.setBackground(new java.awt.Color(0, 0, 51));
        jPanel6.setMaximumSize(new java.awt.Dimension(400, 250));
        jPanel6.setMinimumSize(new java.awt.Dimension(400, 250));
        jPanel6.setPreferredSize(new java.awt.Dimension(400, 250));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcbRelacion.setBackground(new java.awt.Color(51, 0, 51));
        jcbRelacion.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jcbRelacion.setForeground(new java.awt.Color(255, 255, 255));
        jcbRelacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Igual que", "Distinto de", "Menor que", "Menor o Igual", "Mayor que", "Mayor o igual que", "Residuo igual que", "Residuo distinto de" }));
        jcbRelacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbRelacionItemStateChanged(evt);
            }
        });
        jPanel6.add(jcbRelacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 170, -1));

        jcb_variables.setBackground(new java.awt.Color(0, 0, 0));
        jcb_variables.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcb_variables.setForeground(new java.awt.Color(255, 255, 255));
        jcb_variables.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_variablesItemStateChanged(evt);
            }
        });
        jPanel6.add(jcb_variables, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 82, -1));

        jLabel42.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("DesiciÃ³n");
        jPanel6.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 146, 37));

        jLabel44.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("Variable");
        jPanel6.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, 80, -1));

        jLabel47.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("Variable");
        jPanel6.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 80, -1));

        jLabel48.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("RelaciÃ³n");
        jPanel6.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 80, -1));

        jcb_variables1.setBackground(new java.awt.Color(0, 0, 0));
        jcb_variables1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcb_variables1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.add(jcb_variables1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 82, -1));

        jbGuardarIf.setBackground(new java.awt.Color(0, 51, 51));
        jbGuardarIf.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jbGuardarIf.setForeground(new java.awt.Color(204, 255, 204));
        jbGuardarIf.setText("Guardar");
        jbGuardarIf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbGuardarIfMouseClicked(evt);
            }
        });
        jPanel6.add(jbGuardarIf, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, -1, -1));

        jbAnd.setBackground(new java.awt.Color(51, 0, 0));
        jbAnd.setFont(new java.awt.Font("Segoe UI", 1, 8)); // NOI18N
        jbAnd.setForeground(new java.awt.Color(255, 204, 204));
        jbAnd.setText("And");
        jbAnd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbAndMouseClicked(evt);
            }
        });
        jPanel6.add(jbAnd, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, -1, 20));

        jbOr.setBackground(new java.awt.Color(51, 0, 0));
        jbOr.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jbOr.setForeground(new java.awt.Color(255, 204, 204));
        jbOr.setText("Or");
        jbOr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbOrMouseClicked(evt);
            }
        });
        jPanel6.add(jbOr, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, 50, 20));

        jcb_variables2.setBackground(new java.awt.Color(0, 0, 0));
        jcb_variables2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcb_variables2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.add(jcb_variables2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 82, -1));

        jLabel46.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel46.setText("Mod");
        jPanel6.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 80, -1));
        jPanel6.add(txtIf, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 360, -1));

        javax.swing.GroupLayout jd_desicionLayout = new javax.swing.GroupLayout(jd_desicion.getContentPane());
        jd_desicion.getContentPane().setLayout(jd_desicionLayout);
        jd_desicionLayout.setHorizontalGroup(
            jd_desicionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_desicionLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jd_desicionLayout.setVerticalGroup(
            jd_desicionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_desicionLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(51, 0, 51));
        jPanel7.setMaximumSize(new java.awt.Dimension(400, 250));
        jPanel7.setMinimumSize(new java.awt.Dimension(400, 250));
        jPanel7.setPreferredSize(new java.awt.Dimension(400, 250));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel45.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setText("ImpresiÃ³n");
        jPanel7.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 146, 37));

        jbAgregarVariableAImpresion.setBackground(new java.awt.Color(0, 0, 51));
        jbAgregarVariableAImpresion.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jbAgregarVariableAImpresion.setForeground(new java.awt.Color(204, 204, 255));
        jbAgregarVariableAImpresion.setText("Agregar");
        jbAgregarVariableAImpresion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbAgregarVariableAImpresionMouseClicked(evt);
            }
        });
        jPanel7.add(jbAgregarVariableAImpresion, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 70, 20));

        jcb_impresion.setBackground(new java.awt.Color(0, 0, 0));
        jcb_impresion.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcb_impresion.setForeground(new java.awt.Color(255, 255, 255));
        jcb_impresion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_impresionItemStateChanged(evt);
            }
        });
        jcb_impresion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_impresionActionPerformed(evt);
            }
        });
        jPanel7.add(jcb_impresion, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 210, -1));

        jLabel52.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 255, 255));
        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel52.setText("Variables");
        jPanel7.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 80, 20));

        ta_impresion.setColumns(20);
        ta_impresion.setRows(5);
        ta_impresion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ta_impresionMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(ta_impresion);

        jPanel7.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 380, 120));

        jbGuardarImpresion.setBackground(new java.awt.Color(0, 51, 51));
        jbGuardarImpresion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jbGuardarImpresion.setForeground(new java.awt.Color(204, 255, 204));
        jbGuardarImpresion.setText("Guardar");
        jbGuardarImpresion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbGuardarImpresionMouseClicked(evt);
            }
        });
        jPanel7.add(jbGuardarImpresion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, -1, -1));

        javax.swing.GroupLayout jdImpresionLayout = new javax.swing.GroupLayout(jdImpresion.getContentPane());
        jdImpresion.getContentPane().setLayout(jdImpresionLayout);
        jdImpresionLayout.setHorizontalGroup(
            jdImpresionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdImpresionLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jdImpresionLayout.setVerticalGroup(
            jdImpresionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdImpresionLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jmiAgregarVariable.setText("Agregar Variable");
        jmiAgregarVariable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAgregarVariableActionPerformed(evt);
            }
        });
        ppImpresion.add(jmiAgregarVariable);

        jPanel8.setBackground(new java.awt.Color(51, 0, 51));
        jPanel8.setMaximumSize(new java.awt.Dimension(400, 250));
        jPanel8.setMinimumSize(new java.awt.Dimension(400, 250));
        jPanel8.setPreferredSize(new java.awt.Dimension(400, 250));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel49.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("Proceso");
        jPanel8.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 146, 37));

        jcb_operacion.setBackground(new java.awt.Color(0, 0, 0));
        jcb_operacion.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcb_operacion.setForeground(new java.awt.Color(255, 255, 255));
        jcb_operacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Suma", "Resta", "MultiplicaciÃ³n", "DivisiÃ³n", "Lectura", "Otra" }));
        jcb_operacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_operacionItemStateChanged(evt);
            }
        });
        jcb_operacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_operacionActionPerformed(evt);
            }
        });
        jPanel8.add(jcb_operacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 160, -1));

        OPA.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        OPA.setForeground(new java.awt.Color(255, 255, 255));
        OPA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        OPA.setText("AcciÃ³n");
        jPanel8.add(OPA, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 90, -1));

        jbGuardarImpresion1.setBackground(new java.awt.Color(0, 51, 51));
        jbGuardarImpresion1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jbGuardarImpresion1.setForeground(new java.awt.Color(204, 255, 204));
        jbGuardarImpresion1.setText("Guardar");
        jbGuardarImpresion1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbGuardarImpresion1MouseClicked(evt);
            }
        });
        jPanel8.add(jbGuardarImpresion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, -1, -1));

        jcb_proceso2.setBackground(new java.awt.Color(0, 0, 0));
        jcb_proceso2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcb_proceso2.setForeground(new java.awt.Color(255, 255, 255));
        jcb_proceso2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_proceso2ItemStateChanged(evt);
            }
        });
        jcb_proceso2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_proceso2ActionPerformed(evt);
            }
        });
        jPanel8.add(jcb_proceso2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, 90, -1));

        OPV1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        OPV1.setForeground(new java.awt.Color(255, 255, 255));
        OPV1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        OPV1.setText("Variables");
        jPanel8.add(OPV1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 90, -1));

        jcb_Proceso.setBackground(new java.awt.Color(0, 0, 0));
        jcb_Proceso.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcb_Proceso.setForeground(new java.awt.Color(255, 255, 255));
        jcb_Proceso.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_ProcesoItemStateChanged(evt);
            }
        });
        jcb_Proceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_ProcesoActionPerformed(evt);
            }
        });
        jPanel8.add(jcb_Proceso, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 90, -1));

        OPV.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        OPV.setForeground(new java.awt.Color(255, 255, 255));
        OPV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        OPV.setText("Variables");
        jPanel8.add(OPV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 90, -1));

        txtOperacion.setEditable(false);
        jPanel8.add(txtOperacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 220, -1));

        jcb_variableIgual.setBackground(new java.awt.Color(0, 0, 0));
        jcb_variableIgual.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcb_variableIgual.setForeground(new java.awt.Color(255, 255, 255));
        jcb_variableIgual.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_variableIgualItemStateChanged(evt);
            }
        });
        jcb_variableIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_variableIgualActionPerformed(evt);
            }
        });
        jPanel8.add(jcb_variableIgual, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 90, -1));

        OPV2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        OPV2.setForeground(new java.awt.Color(255, 255, 255));
        OPV2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        OPV2.setText("=");
        jPanel8.add(OPV2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 30, -1));

        javax.swing.GroupLayout jdProcesoLayout = new javax.swing.GroupLayout(jdProceso.getContentPane());
        jdProceso.getContentPane().setLayout(jdProcesoLayout);
        jdProcesoLayout.setHorizontalGroup(
            jdProcesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jdProcesoLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jdProcesoLayout.setVerticalGroup(
            jdProcesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdProcesoLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(51, 51, 51));
        jPanel9.setMaximumSize(new java.awt.Dimension(400, 250));
        jPanel9.setMinimumSize(new java.awt.Dimension(400, 250));
        jPanel9.setPreferredSize(new java.awt.Dimension(400, 250));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel50.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("Mientras");
        jPanel9.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 146, 37));

        jLabel56.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(255, 255, 255));
        jLabel56.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel56.setText("AcciÃ³n");
        jPanel9.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 90, -1));

        jbGuardarImpresion2.setBackground(new java.awt.Color(0, 51, 51));
        jbGuardarImpresion2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jbGuardarImpresion2.setForeground(new java.awt.Color(204, 255, 204));
        jbGuardarImpresion2.setText("Guardar");
        jbGuardarImpresion2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbGuardarImpresion2MouseClicked(evt);
            }
        });
        jPanel9.add(jbGuardarImpresion2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, -1, -1));

        jcb_while2.setBackground(new java.awt.Color(0, 0, 0));
        jcb_while2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcb_while2.setForeground(new java.awt.Color(255, 255, 255));
        jcb_while2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "True", "False", "Otra Variable" }));
        jcb_while2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_while2ItemStateChanged(evt);
            }
        });
        jcb_while2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_while2ActionPerformed(evt);
            }
        });
        jPanel9.add(jcb_while2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 90, -1));

        jlbwhile.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jlbwhile.setForeground(new java.awt.Color(255, 255, 255));
        jlbwhile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbwhile.setText("Variables");
        jPanel9.add(jlbwhile, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 90, 20));

        jcb_whileV1.setBackground(new java.awt.Color(0, 0, 0));
        jcb_whileV1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcb_whileV1.setForeground(new java.awt.Color(255, 255, 255));
        jcb_whileV1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_whileV1ItemStateChanged(evt);
            }
        });
        jcb_whileV1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_whileV1ActionPerformed(evt);
            }
        });
        jPanel9.add(jcb_whileV1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 90, -1));

        jLabel58.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 255, 255));
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel58.setText("Variables");
        jPanel9.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 90, -1));

        jcbRelacionWhile.setBackground(new java.awt.Color(51, 0, 51));
        jcbRelacionWhile.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jcbRelacionWhile.setForeground(new java.awt.Color(255, 255, 255));
        jcbRelacionWhile.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Igual que", "Distinto de", "Menor que", "Menor o Igual", "Mayor que", "Mayor o igual que", "Residuo igual que", "Residuo distinto de" }));
        jcbRelacionWhile.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbRelacionWhileItemStateChanged(evt);
            }
        });
        jPanel9.add(jcbRelacionWhile, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 160, -1));

        jcb_whileV.setBackground(new java.awt.Color(0, 0, 0));
        jcb_whileV.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcb_whileV.setForeground(new java.awt.Color(255, 255, 255));
        jcb_whileV.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_whileVItemStateChanged(evt);
            }
        });
        jcb_whileV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_whileVActionPerformed(evt);
            }
        });
        jPanel9.add(jcb_whileV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 90, -1));

        txtWhile.setEditable(false);
        jPanel9.add(txtWhile, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 360, -1));

        javax.swing.GroupLayout jdWhileLayout = new javax.swing.GroupLayout(jdWhile.getContentPane());
        jdWhile.getContentPane().setLayout(jdWhileLayout);
        jdWhileLayout.setHorizontalGroup(
            jdWhileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jdWhileLayout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jdWhileLayout.setVerticalGroup(
            jdWhileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdWhileLayout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MiniVisio - Carlos Wilfredo Romero Maradiaga");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpTexto.setBackground(new java.awt.Color(0, 102, 102));
        jpTexto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jpTexto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton3.setBackground(new java.awt.Color(0, 51, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 204, 102));
        jButton3.setText("Cambiar Color de Texto");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jpTexto.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 170, 40));

        jButton5.setBackground(new java.awt.Color(153, 153, 255));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 204, 153));
        jButton5.setText("Cambiar Fuente de Texto");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jpTexto.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 20, 170, 40));

        jbSetTexto.setBackground(new java.awt.Color(153, 255, 153));
        jbSetTexto.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbSetTexto.setForeground(new java.awt.Color(102, 0, 0));
        jbSetTexto.setText("Cambiar Texto");
        jbSetTexto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbSetTextoMouseClicked(evt);
            }
        });
        jpTexto.add(jbSetTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 170, 40));

        sptamanio.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        sptamanio.setModel(new javax.swing.SpinnerNumberModel(11, 3, 36, 1));
        sptamanio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sptamanioStateChanged(evt);
            }
        });
        jpTexto.add(sptamanio, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 20, 60, 40));

        jLabel35.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("TamaÃ±o");
        jpTexto.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 20, 80, 20));

        jLabel36.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Texto");
        jpTexto.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 40, 80, 20));

        getContentPane().add(jpTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 950, 70));

        jpPropiedadesClase.setBackground(new java.awt.Color(0, 102, 102));
        jpPropiedadesClase.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jpPropiedadesClase.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbVerMetodos.setBackground(new java.awt.Color(51, 0, 0));
        jbVerMetodos.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbVerMetodos.setForeground(new java.awt.Color(255, 204, 204));
        jbVerMetodos.setText("Ver MÃ©todos");
        jbVerMetodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbVerMetodosMouseClicked(evt);
            }
        });
        jpPropiedadesClase.add(jbVerMetodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, 130, 40));

        jbVerAtributo.setBackground(new java.awt.Color(0, 0, 51));
        jbVerAtributo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbVerAtributo.setForeground(new java.awt.Color(204, 204, 255));
        jbVerAtributo.setText("Ver Atributos");
        jbVerAtributo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbVerAtributoMouseClicked(evt);
            }
        });
        jpPropiedadesClase.add(jbVerAtributo, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 130, 40));

        jbMetodo.setBackground(new java.awt.Color(153, 255, 153));
        jbMetodo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbMetodo.setForeground(new java.awt.Color(102, 0, 0));
        jbMetodo.setText("Agregar MÃ©todos");
        jbMetodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbMetodoMouseClicked(evt);
            }
        });
        jpPropiedadesClase.add(jbMetodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 20, 130, 40));

        jbAtributo.setBackground(new java.awt.Color(0, 51, 51));
        jbAtributo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbAtributo.setForeground(new java.awt.Color(204, 255, 204));
        jbAtributo.setText("Agregar Atributos");
        jbAtributo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbAtributoMouseClicked(evt);
            }
        });
        jpPropiedadesClase.add(jbAtributo, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 130, 40));

        jbColorClase.setBackground(new java.awt.Color(51, 0, 51));
        jbColorClase.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbColorClase.setForeground(new java.awt.Color(255, 204, 204));
        jbColorClase.setText("Color Clase");
        jbColorClase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbColorClaseMouseClicked(evt);
            }
        });
        jbColorClase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbColorClaseActionPerformed(evt);
            }
        });
        jpPropiedadesClase.add(jbColorClase, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 110, 40));

        jbFuenteClase.setBackground(new java.awt.Color(204, 204, 255));
        jbFuenteClase.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbFuenteClase.setForeground(new java.awt.Color(51, 0, 51));
        jbFuenteClase.setText("Fuente");
        jbFuenteClase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbFuenteClaseMouseClicked(evt);
            }
        });
        jpPropiedadesClase.add(jbFuenteClase, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 110, 40));

        stamanioclase.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        stamanioclase.setModel(new javax.swing.SpinnerNumberModel(11, 11, null, 1));
        stamanioclase.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                stamanioclaseStateChanged(evt);
            }
        });
        jpPropiedadesClase.add(stamanioclase, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 50, 40));

        jLabel32.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("Texto");
        jpPropiedadesClase.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, 80, 20));

        jLabel34.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("TamaÃ±o");
        jpPropiedadesClase.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 80, 20));

        getContentPane().add(jpPropiedadesClase, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 950, 70));

        jpDiseno.setBackground(new java.awt.Color(0, 102, 102));
        jpDiseno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jpDiseno.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(153, 153, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 204, 153));
        jButton1.setText("Color de Componente");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jpDiseno.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, 150, 40));

        jbEliminar.setBackground(new java.awt.Color(255, 153, 153));
        jbEliminar.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jbEliminar.setForeground(new java.awt.Color(51, 0, 0));
        jbEliminar.setText("Eliminar Componente");
        jbEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbEliminarMouseClicked(evt);
            }
        });
        jpDiseno.add(jbEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 150, 40));

        jbAPropiedades.setBackground(new java.awt.Color(51, 0, 51));
        jbAPropiedades.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbAPropiedades.setForeground(new java.awt.Color(255, 204, 204));
        jbAPropiedades.setText("Agregar Propiedades");
        jbAPropiedades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbAPropiedadesMouseClicked(evt);
            }
        });
        jpDiseno.add(jbAPropiedades, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, 150, 40));

        jmiPropiedades1.setBackground(new java.awt.Color(0, 0, 51));
        jmiPropiedades1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jmiPropiedades1.setForeground(new java.awt.Color(204, 204, 255));
        jmiPropiedades1.setText("Aun no sÃ©");
        jpDiseno.add(jmiPropiedades1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 150, 40));

        jbVerP.setBackground(new java.awt.Color(255, 153, 153));
        jbVerP.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jbVerP.setForeground(new java.awt.Color(51, 0, 0));
        jbVerP.setText("Ver Propiedades");
        jbVerP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbVerPMouseClicked(evt);
            }
        });
        jbVerP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVerPActionPerformed(evt);
            }
        });
        jpDiseno.add(jbVerP, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 20, 150, 40));

        getContentPane().add(jpDiseno, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 950, 70));

        jpBase0.setBackground(new java.awt.Color(153, 153, 153));
        jpBase0.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelClase.setBackground(new java.awt.Color(204, 255, 204));
        PanelClase.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtConfiguracion.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        txtConfiguracion.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        txSeleccionado1.setEditable(false);
        txSeleccionado1.setBackground(new java.awt.Color(0, 0, 0));
        txSeleccionado1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txSeleccionado1.setForeground(new java.awt.Color(0, 255, 102));

        btSeparador1.setBackground(new java.awt.Color(255, 153, 102));
        btSeparador1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/8.png"))); // NOI18N
        btSeparador1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSeparador1MouseClicked(evt);
            }
        });

        btSeparadorV1.setBackground(new java.awt.Color(255, 255, 153));
        btSeparadorV1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/7.png"))); // NOI18N
        btSeparadorV1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSeparadorV1MouseClicked(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel17.setText("Separador Vertical");

        jLabel18.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel18.setText("Separador");

        jLabel19.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel19.setText("Formas para Diagramas de Clases:");

        btClase.setBackground(new java.awt.Color(0, 204, 204));
        btClase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Clase.jpg"))); // NOI18N
        btClase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btClaseMouseClicked(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel20.setText("Clase");

        txConfiguracion.setEditable(false);
        txConfiguracion.setColumns(20);
        txConfiguracion.setFont(new java.awt.Font("Monospaced", 1, 15)); // NOI18N
        txConfiguracion.setRows(5);
        txConfiguracion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txConfiguracionMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(txConfiguracion);

        jLabel21.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel21.setText("Clase Seleccionada:");
        jLabel21.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jbHerencia.setBackground(new java.awt.Color(51, 0, 0));
        jbHerencia.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbHerencia.setForeground(new java.awt.Color(255, 204, 204));
        jbHerencia.setText("Herencia");
        jbHerencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbHerenciaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PanelClaseLayout = new javax.swing.GroupLayout(PanelClase);
        PanelClase.setLayout(PanelClaseLayout);
        PanelClaseLayout.setHorizontalGroup(
            PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btClase, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(PanelClaseLayout.createSequentialGroup()
                .addGroup(PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelClaseLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel19))
                    .addGroup(PanelClaseLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtConfiguracion, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelClaseLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelClaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelClaseLayout.createSequentialGroup()
                        .addGroup(PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txSeleccionado1)
                            .addGroup(PanelClaseLayout.createSequentialGroup()
                                .addComponent(btSeparador1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addComponent(jLabel20)
                                .addGap(18, 18, 18)
                                .addComponent(btSeparadorV1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(PanelClaseLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelClaseLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17)
                        .addGap(32, 32, 32))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelClaseLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbHerencia, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelClaseLayout.setVerticalGroup(
            PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelClaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btClase, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelClaseLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btSeparador1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btSeparadorV1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelClaseLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel20)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbHerencia, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txSeleccionado1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtConfiguracion, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jpBase0.add(PanelClase, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 380, 640));

        PanelFlujo.setBackground(new java.awt.Color(204, 204, 255));
        PanelFlujo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel6.setText("Formas para Diagramas de Flujo:");

        btProceso.setBackground(new java.awt.Color(153, 153, 255));
        btProceso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/5.png"))); // NOI18N
        btProceso.setToolTipText("Se usa para procesos principales");
        btProceso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btProcesoMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel7.setText("Proceso");

        jLabel8.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel8.setText("Inicio o FinalizaciÃ³n ");

        jLabel9.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel9.setText("Datos");

        jLabel10.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel10.setText("While");

        jLabel11.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel11.setText("DesiciÃ³n");

        jLabel12.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel12.setText("ImpresiÃ³n");

        jLabel13.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel13.setText("Fin Bloque");

        btInicio.setBackground(new java.awt.Color(204, 255, 204));
        btInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/1.png"))); // NOI18N
        btInicio.setToolTipText("Se usa para iniciar o finalizar");
        btInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btInicioMouseClicked(evt);
            }
        });

        btWhile.setBackground(new java.awt.Color(255, 153, 255));
        btWhile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/6.png"))); // NOI18N
        btWhile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btWhileMouseClicked(evt);
            }
        });

        btDatos.setBackground(new java.awt.Color(0, 153, 153));
        btDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/2.png"))); // NOI18N
        btDatos.setToolTipText("Se utiliza para agregar datos o variables");
        btDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btDatosMouseClicked(evt);
            }
        });

        btSeparador.setBackground(new java.awt.Color(255, 153, 102));
        btSeparador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/8.png"))); // NOI18N
        btSeparador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSeparadorMouseClicked(evt);
            }
        });

        btDesicion.setBackground(new java.awt.Color(255, 153, 153));
        btDesicion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/3.png"))); // NOI18N
        btDesicion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btDesicionMouseClicked(evt);
            }
        });

        btSeparadorV.setBackground(new java.awt.Color(255, 255, 153));
        btSeparadorV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/7.png"))); // NOI18N
        btSeparadorV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSeparadorVMouseClicked(evt);
            }
        });

        btImpresion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/4.png"))); // NOI18N
        btImpresion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btImpresionMouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel14.setText("Else");

        txSeleccionado.setEditable(false);
        txSeleccionado.setBackground(new java.awt.Color(0, 0, 0));
        txSeleccionado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txSeleccionado.setForeground(new java.awt.Color(0, 255, 102));

        jLabel15.setFont(new java.awt.Font("Georgia", 1, 13)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Objeto Seleccionado:");
        jLabel15.setToolTipText("");

        javax.swing.GroupLayout PanelFlujoLayout = new javax.swing.GroupLayout(PanelFlujo);
        PanelFlujo.setLayout(PanelFlujoLayout);
        PanelFlujoLayout.setHorizontalGroup(
            PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFlujoLayout.createSequentialGroup()
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFlujoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btDesicion, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelFlujoLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addGap(40, 40, 40))
                    .addGroup(PanelFlujoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFlujoLayout.createSequentialGroup()
                                .addComponent(btInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btProceso, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelFlujoLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addGap(39, 39, 39))
                            .addGroup(PanelFlujoLayout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12)
                                .addGap(46, 46, 46))
                            .addGroup(PanelFlujoLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(PanelFlujoLayout.createSequentialGroup()
                                .addComponent(btWhile, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(btImpresion, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFlujoLayout.createSequentialGroup()
                                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btSeparador, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(PanelFlujoLayout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(jLabel13)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btSeparadorV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFlujoLayout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addGap(60, 60, 60))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFlujoLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        PanelFlujoLayout.setVerticalGroup(
            PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFlujoLayout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btInicio))
                .addGap(4, 4, 4)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btDesicion)
                    .addComponent(btDatos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelFlujoLayout.createSequentialGroup()
                        .addComponent(btImpresion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelFlujoLayout.createSequentialGroup()
                        .addComponent(btWhile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btSeparadorV, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSeparador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txSeleccionado, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jpBase0.add(PanelFlujo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jpBase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpBaseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpBaseLayout = new javax.swing.GroupLayout(jpBase);
        jpBase.setLayout(jpBaseLayout);
        jpBaseLayout.setHorizontalGroup(
            jpBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 910, Short.MAX_VALUE)
        );
        jpBaseLayout.setVerticalGroup(
            jpBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );

        jpBase0.add(jpBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 11, 910, 640));

        getContentPane().add(jpBase0, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 1320, 660));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo1.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, -1, -1));

        lbFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoPrincipal.png"))); // NOI18N
        getContentPane().add(lbFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 550));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo.PNG"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 570, -1, -1));

        mbPrincipal.setBackground(new java.awt.Color(51, 102, 255));
        mbPrincipal.setForeground(new java.awt.Color(51, 102, 255));
        mbPrincipal.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N

        mArchivo.setForeground(new java.awt.Color(255, 102, 102));
        mArchivo.setText("Archivo");
        mArchivo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mArchivoActionPerformed(evt);
            }
        });

        jmiNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jmiNuevo.setText("Nuevo");
        jmiNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNuevoActionPerformed(evt);
            }
        });
        mArchivo.add(jmiNuevo);

        jmiAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jmiAbrir.setText("Abrir");
        jmiAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAbrirActionPerformed(evt);
            }
        });
        mArchivo.add(jmiAbrir);

        jmiGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jmiGuardar.setText("Guardar Diagrama");
        jmiGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGuardarActionPerformed(evt);
            }
        });
        mArchivo.add(jmiGuardar);

        jmiGuardarComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_MASK));
        jmiGuardarComo.setText("Guardar Diagrama Como");
        jmiGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGuardarComoActionPerformed(evt);
            }
        });
        mArchivo.add(jmiGuardarComo);

        jmiImprimir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jmiImprimir.setText("Imprimir");
        jmiImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiImprimirActionPerformed(evt);
            }
        });
        mArchivo.add(jmiImprimir);

        jmiCodigo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jmiCodigo.setText("Generar CÃ³digo C++");
        jmiCodigo.setEnabled(false);
        jmiCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCodigoActionPerformed(evt);
            }
        });
        mArchivo.add(jmiCodigo);

        jmiAcercaDe.setText("Acerca De");
        mArchivo.add(jmiAcercaDe);

        mbPrincipal.add(mArchivo);

        mEdiciontx.setBackground(new java.awt.Color(102, 153, 255));
        mEdiciontx.setForeground(new java.awt.Color(153, 153, 255));
        mEdiciontx.setText("EdiciÃ³n de Texto ");
        mEdiciontx.setEnabled(false);
        mEdiciontx.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mEdiciontx.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mEdiciontxMouseClicked(evt);
            }
        });
        mbPrincipal.add(mEdiciontx);

        mDiseno.setForeground(new java.awt.Color(102, 255, 204));
        mDiseno.setText("DiseÃ±o");
        mDiseno.setEnabled(false);
        mDiseno.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mDiseno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mDisenoMouseClicked(evt);
            }
        });
        mDiseno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mDisenoActionPerformed(evt);
            }
        });
        mbPrincipal.add(mDiseno);

        jmPropiedades.setForeground(new java.awt.Color(247, 173, 124));
        jmPropiedades.setText("Propiedades");
        jmPropiedades.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jmPropiedades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmPropiedadesMouseClicked(evt);
            }
        });
        mbPrincipal.add(jmPropiedades);

        setJMenuBar(mbPrincipal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNuevoActionPerformed
        jdNuevo.getContentPane().setBackground(Color.WHITE);
        jdNuevo.setModal(true);
        jdNuevo.pack();
        jdNuevo.setLocationRelativeTo(this);
        jdNuevo.setVisible(true);
        jpPropiedadesClase.setVisible(false);
        jpDiseno.setVisible(false);
        jpTexto.setVisible(false);
        jmiAbrir.setEnabled(true);
        copiar = 0;
    }//GEN-LAST:event_jmiNuevoActionPerformed

    private void mArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mArchivoActionPerformed

    private void btNuevoDiagramaDeFlujoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btNuevoDiagramaDeFlujoMouseClicked
        jcb_variables.setModel(new DefaultComboBoxModel());
        jcb_variables1.setModel(new DefaultComboBoxModel());
        jcb_variables2.setModel(new DefaultComboBoxModel());
        jcb_impresion.setModel(new DefaultComboBoxModel());
        jcb_whileV.setModel(new DefaultComboBoxModel());
        jcb_whileV1.setModel(new DefaultComboBoxModel());
        jcb_Proceso.setModel(new DefaultComboBoxModel());
        jcb_proceso2.setModel(new DefaultComboBoxModel());
        jcb_variableIgual.setModel(new DefaultComboBoxModel());
        jpBase0.setVisible(true);
        jdNuevo.dispose();
        jpBase.removeAll();
        jpBase.setBackground(Color.WHITE);
        PanelClase.setVisible(false);
        PanelFlujo.setVisible(true);
        mEdiciontx.setVisible(true);
        mDiseno.setVisible(true);
        centinela = 1;
        jmiCodigo.setEnabled(true);
        jmiCodigo.setEnabled(true);
        clases = new ArrayList();
        nombresdeclase = new ArrayList();
        jmiGuardarComo.setEnabled(true);
        jmiGuardar.setEnabled(true);
        jmiAbrir.setEnabled(true);
        jmPropiedades.setVisible(false);
        whiles = 0;
        inicio = 0;
        desicion = 0;
        impresion = 0;
        proceso = 0;
        datos = 0;
        separador = 0;
        separadorVertical = 0;
        jmiImprimir.setEnabled(true);
        this.repaint();
    }//GEN-LAST:event_btNuevoDiagramaDeFlujoMouseClicked

    private void btProcesoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btProcesoMouseClicked
        String Nombre = "Proceso";
        String imagen = "/ComponentesDiagramaUML/5.png";
        proceso++;
        int tipo = 3;
        AgregarObjeto(Nombre, imagen, proceso, tipo);
    }//GEN-LAST:event_btProcesoMouseClicked

    private void btSeparadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSeparadorMouseClicked
        String Nombre = "Separador";
        String imagen = "/ComponentesDiagramaUML/8.png";
        separador++;
        int tipo = 7;
        AgregarObjeto(Nombre, imagen, separador, tipo);
    }//GEN-LAST:event_btSeparadorMouseClicked

    private void btSeparadorVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSeparadorVMouseClicked
        String Nombre = "SeparadorVertical";
        String imagen = "/ComponentesDiagramaUML/7.png";
        separadorVertical++;
        int tipo = 8;
        AgregarObjeto(Nombre, imagen, separadorVertical, tipo);
    }//GEN-LAST:event_btSeparadorVMouseClicked

    private void miEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEliminarActionPerformed
        EliminarComponente();
    }//GEN-LAST:event_miEliminarActionPerformed

    private void jpBaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBaseMouseClicked
        jpDiseno.setVisible(false);
        mDiseno.setEnabled(false);
        mEdiciontx.setEnabled(false);
        jpTexto.setVisible(false);
        txSeleccionado.setText("");
        txConfiguracion.setText("");
        txtConfiguracion.setText("");
        txConfiguracion.setEditable(false);
        txSeleccionado1.setText("");
        jdAgregarAtributo.setVisible(false);
        jpPropiedadesClase.setVisible(false);
        jmPropiedades.setEnabled(false);
        if (evt.isMetaDown() && copiar != 0) {
            jppPegar.show(jpBase, evt.getX(), evt.getY());
            X = evt.getX();
            Y = evt.getY();
        }
        txtIf.setText("");
    }//GEN-LAST:event_jpBaseMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void mDisenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mDisenoActionPerformed

    }//GEN-LAST:event_mDisenoActionPerformed

    private void mDisenoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mDisenoMouseClicked
        if (mDiseno.isEnabled()) {
            jpDiseno.setVisible(true);
            jpTexto.setVisible(false);
        }
    }//GEN-LAST:event_mDisenoMouseClicked

    private void jbtDiagramaClasesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtDiagramaClasesMouseClicked
        jpBase0.setVisible(true);
        jdNuevo.dispose();
        jpBase.setBackground(Color.WHITE);
        PanelFlujo.setVisible(false);
        PanelClase.setVisible(true);
        jpBase.removeAll();
        mDiseno.setVisible(false);
        mEdiciontx.setVisible(false);
        centinela = 2;
        jmiCodigo.setEnabled(true);
        jmiCodigo.setEnabled(true);
        clases = new ArrayList();
        nombresdeclase = new ArrayList();
        jmPropiedades.setVisible(true);
        jmiGuardarComo.setEnabled(true);
        jmiGuardar.setEnabled(true);
        jmiAbrir.setEnabled(true);
        separador = 0;
        separadorVertical = 0;
        jmiImprimir.setEnabled(true);
        this.repaint();
    }//GEN-LAST:event_jbtDiagramaClasesMouseClicked

    private void jmiCambiarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCambiarTextoActionPerformed
        CambiarTexto();
    }//GEN-LAST:event_jmiCambiarTextoActionPerformed

    private void jmiCambiarColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCambiarColorActionPerformed
        CambiarColorComponente();
    }//GEN-LAST:event_jmiCambiarColorActionPerformed

    private void jmiColorTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiColorTextoActionPerformed
        CambiarColorTexto();
    }//GEN-LAST:event_jmiColorTextoActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        CambiarColorComponente();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jbEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbEliminarMouseClicked
        EliminarComponente();
    }//GEN-LAST:event_jbEliminarMouseClicked

    private void mEdiciontxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mEdiciontxMouseClicked
        // TODO add your handling code here:
        if (mDiseno.isEnabled()) {
            jpTexto.setVisible(true);
            jpDiseno.setVisible(false);
        }
    }//GEN-LAST:event_mEdiciontxMouseClicked

    private void jmiCambiarFuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCambiarFuenteActionPerformed
        CambiarFuente();
    }//GEN-LAST:event_jmiCambiarFuenteActionPerformed

    private void btInicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btInicioMouseClicked
        String Nombre = "Inicio/Finalizacion";
        String imagen = "/ComponentesDiagramaUML/1.png";
        inicio++;
        int tipo = 1;
        AgregarObjeto(Nombre, imagen, inicio, tipo);
    }//GEN-LAST:event_btInicioMouseClicked

    private void btImpresionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btImpresionMouseClicked
        String Nombre = "Impresion";
        String imagen = "/ComponentesDiagramaUML/4.png";
        impresion++;
        int tipo = 6;
        AgregarObjeto(Nombre, imagen, impresion, tipo);
    }//GEN-LAST:event_btImpresionMouseClicked

    private void btWhileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btWhileMouseClicked
        String Nombre = "While";
        String imagen = "/ComponentesDiagramaUML/6.png";
        whiles++;
        int tipo = 5;
        AgregarObjeto(Nombre, imagen, whiles, tipo);
    }//GEN-LAST:event_btWhileMouseClicked

    private void btDesicionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDesicionMouseClicked
        String Nombre = "Desicion";
        String imagen = "/ComponentesDiagramaUML/3.png";
        desicion++;
        int tipo = 4;
        AgregarObjeto(Nombre, imagen, desicion, tipo);
    }//GEN-LAST:event_btDesicionMouseClicked

    private void btDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDatosMouseClicked
        String Nombre = "Datos";
        String imagen = "/ComponentesDiagramaUML/2.png";
        datos++;
        int tipo = 2;
        AgregarObjeto(Nombre, imagen, datos, tipo);
    }//GEN-LAST:event_btDatosMouseClicked

    private void btSeparador1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSeparador1MouseClicked
        // TODO add your handling code here:
        String Nombre = "Separador";
        String imagen = "/ComponentesDiagramaUML/8.png";
        JLabel objeto;
        objeto = new JLabel();
        objeto.setOpaque(true);
        objeto.setName(Nombre + "_" + separador);
        objeto.setBackground(ColorAletorio());
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        separador++;
        this.jpBase.add(objeto);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        objeto.setLocation(x, y);
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        objeto.setSize(135, 90);
        actual = objeto;
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        objeto.setBorder(null);
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado1.setText(objeto.getName());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 800)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                actual = objeto;
                txSeleccionado1.setText(objeto.getName());
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                if (evt.isMetaDown()) {
                    actual = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(254, 146, 0), 2));
                objeto.setToolTipText(objeto.getName());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                actual = objeto;
                txSeleccionado1.setText(objeto.getName());
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
    }//GEN-LAST:event_btSeparador1MouseClicked

    private void btSeparadorV1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSeparadorV1MouseClicked
        // TODO add your handling code here:
        String Nombre = "SeparadorVertical";
        String imagen = "/ComponentesDiagramaUML/7.png";
        JLabel objeto;
        objeto = new JLabel();
        objeto.setOpaque(true);
        objeto.setName(Nombre + "_" + separadorVertical);
        objeto.setBackground(ColorAletorio());
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        separadorVertical++;
        this.jpBase.add(objeto);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        objeto.setLocation(x, y);
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        objeto.setSize(135, 90);
        actual = objeto;
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        objeto.setBorder(null);
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado1.setText(objeto.getName());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 800)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                actual = objeto;
                txSeleccionado1.setText(objeto.getName());
                if (evt.isMetaDown()) {
                    actual = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(254, 146, 0), 2));
                objeto.setToolTipText(objeto.getName());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                actual = objeto;
                txSeleccionado1.setText(objeto.getName());
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
    }//GEN-LAST:event_btSeparadorV1MouseClicked

    private void btClaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btClaseMouseClicked
        boolean X = false;
        txConfiguracion.setText("");
        String Nombre = "";
        while (X == false) {
            Nombre = JOptionPane.showInputDialog(this, "Ingrese el Nombre de la Clase:", "Clase!", 3);
            int Y = 0;
            for (int i = 0; i < nombresdeclase.size(); i++) {
                if (nombresdeclase.get(i).equals(Nombre)) {
                    Y++;
                }
            }
            if (Y == 0) {
                X = true;
            } else {
                JOptionPane.showMessageDialog(this, "Ese Nombre ya estÃ¡ utilizado!", "Advertencia", 0);
            }
        }
        nombresdeclase.add(Nombre);
        DefaultMutableTreeNode Root = new DefaultMutableTreeNode(Nombre);
        DefaultTreeModel modelo = new DefaultTreeModel(Root);
        JTree arbol = new JTree(modelo);
        DefaultTreeModel m = (DefaultTreeModel) arbol.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
        DefaultMutableTreeNode atributos = new DefaultMutableTreeNode("<Atributos>");
        DefaultMutableTreeNode metodos = new DefaultMutableTreeNode("<Metodos>");
        raiz.add(atributos);
        raiz.add(metodos);
        arbol.setName("");
        arbol.setSize(150, 150);
        arbol.setBackground(new java.awt.Color(192, 255, 243));
        arbol.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
        tree++;
        arbol.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        arbol.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                actualT = arbol;
                jmPropiedades.setEnabled(true);
                txSeleccionado1.setText(modelo.getRoot().toString());
                int row = arbol.getClosestRowForLocation(evt.getX(), evt.getY());
                arbol.setSelectionRow(row);
                Object v1 = arbol.getSelectionPath().getLastPathComponent();
                nodoS = (DefaultMutableTreeNode) v1;
                if (evt.isMetaDown()) {
                    actualT = arbol;
                    copiart = arbol;
                    if (v1.toString().contains("<Metodos>")) {
                        jmiEliminarNodo.setVisible(false);
                    } else if (v1.toString().contains("<Atributos>")) {
                        jmiEliminarNodo.setVisible(false);
                    } else if (v1.toString().contains(raiz.toString())) {
                        jmiEliminarNodo.setVisible(false);
                    } else {
                        jmiEliminarNodo.setVisible(true);
                    }
                    ppMenuClases.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                arbol.setBorder(BorderFactory.createLineBorder(new java.awt.Color(254, 146, 0), 2));
                arbol.setToolTipText(modelo.getRoot().toString());
            }

            public void mouseExited(MouseEvent arg0) {
                arbol.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
            }

            public void mousePressed(MouseEvent arg0) {
                actualT = arbol;
                txSeleccionado1.setText(modelo.getRoot().toString());
            }

            public void mouseReleased(MouseEvent arg0) {
            }
        });
        arbol.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actualT = arbol;
                txSeleccionado1.setText(modelo.getRoot().toString());
                if (((arbol.getLocation().x + evt.getX() - arbol.getWidth() / 2) > 0)) {
                    if (((arbol.getLocation().x + evt.getX() - arbol.getWidth() / 2) < 770)) {
                        if ((arbol.getLocation().y + evt.getY() - arbol.getWidth() / 2) > -15) {
                            if ((arbol.getLocation().y + evt.getY() - arbol.getWidth() / 2) < 500) {
                                arbol.setLocation(arbol.getLocation().x + evt.getX() - arbol.getWidth() / 2,
                                        arbol.getLocation().y + evt.getY() - arbol.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        this.jpBase.add(arbol);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        arbol.setLocation(x, y);
        clases.add(arbol);
        jpBase.repaint();
        DefaultComboBoxModel model = (DefaultComboBoxModel) jcpadre.getModel();
        DefaultComboBoxModel modelH = (DefaultComboBoxModel) jcHijo.getModel();
        model.addElement(modelo.getRoot());
        modelH.addElement(modelo.getRoot());
        jcHijo.setModel(modelH);
        jcpadre.setModel(model);

    }//GEN-LAST:event_btClaseMouseClicked

    private void jmiEliminarArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEliminarArbolActionPerformed
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        nombresdeclase.remove(model.getRoot().toString());
        clases.remove(actualT);
        jpBase.remove(actualT);
        txSeleccionado1.setText("");
        System.out.println(clases);
        System.out.println(nombresdeclase);
        DefaultComboBoxModel modelo=new DefaultComboBoxModel();
        DefaultComboBoxModel modelo1=new DefaultComboBoxModel();
        for (int i = 0; i < nombresdeclase.size(); i++) {
            modelo.addElement(nombresdeclase.get(i));
            modelo1.addElement(nombresdeclase.get(i));
        }
        jcpadre.setModel(modelo);
        jcHijo.setModel(modelo1);
        this.repaint();
    }//GEN-LAST:event_jmiEliminarArbolActionPerformed

    private void jmiMetodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMetodosActionPerformed
        String x = "";
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        for (int i = 0; i < root.getChildCount(); i++) {
            if (root.getChildAt(i).toString().equals("<Metodos>")) {
                for (int j = 0; j < root.getChildAt(i).getChildCount(); j++) {
                    x += "" + (DefaultMutableTreeNode) root.getChildAt(i).getChildAt(j) + "\n";
                }
            }
        }
        txConfiguracion.setText("MÃ©todos de la Clase <<" + model.getRoot() + ">>:\n" + x);
        x = "";
        txConfiguracion.setEnabled(true);
        txtConfiguracion.setText("MÃ©todos:");
        txConfiguracion.setEditable(false);
        jdAgregarMetodo.setModal(true);
        jdAgregarMetodo.pack();
        jdAgregarMetodo.setLocationRelativeTo(this);
        jdAgregarMetodo.setVisible(true);
    }//GEN-LAST:event_jmiMetodosActionPerformed

    private void jmiAtributosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAtributosActionPerformed
        String x = "";
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        for (int i = 0; i < root.getChildCount(); i++) {
            if (root.getChildAt(i).toString().equals("<Atributos>")) {
                for (int j = 0; j < root.getChildAt(i).getChildCount(); j++) {
                    x += "" + (DefaultMutableTreeNode) root.getChildAt(i).getChildAt(j) + "\n";
                }
            }
        }
        txConfiguracion.setText("Atributos de la Clase <<" + model.getRoot() + ">>:\n" + x);
        txConfiguracion.setEnabled(true);
        txtConfiguracion.setText("Atributos:");
        txConfiguracion.setEditable(false);
        x = "";
        jdAgregarAtributo.setModal(true);
        jdAgregarAtributo.pack();
        jdAgregarAtributo.setLocationRelativeTo(this);
        jdAgregarAtributo.setVisible(true);
    }//GEN-LAST:event_jmiAtributosActionPerformed

    private void txConfiguracionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txConfiguracionMouseClicked

    }//GEN-LAST:event_txConfiguracionMouseClicked

    private void jmiCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCodigoActionPerformed
        if (centinela == 2) {
            taCodigo.setText("");
            String c = "";
            if (centinela == 2) {
                for (int i = 0; i < clases.size(); i++) {
                    CodigoDiagramaDeClases cod = new CodigoDiagramaDeClases((JTree) clases.get(i));
                    cod.Inicio();
                    cod.Atributos();
                    cod.Constructor();
                    cod.Metodo();
                    cod.Destructores();
                    cod.Final();
                    c += cod.getCodigo();
                }
                taCodigo.setText(c);
            }
            jPanel1.setBackground(Color.BLACK);
            jdCodigo.setModal(true);
            jdCodigo.pack();
            jdCodigo.setLocationRelativeTo(this);
            jdCodigo.setVisible(true);
        } else if (centinela == 1) {
            try {
                taCodigo.setText("");
                String c = "";
                CodigoDiagramaDeFlujo cod = new CodigoDiagramaDeFlujo();
                cod.Inicio();
                for (int i = 0; i < componentes.size(); i++) {
                    cod.setObjeto(componentes.get(i));
                    cod.Generar();
                }
                cod.Final();
                c = cod.getCodigo();
                if (cod.isX() == true) {
                    taCodigo.setText(c);
                    jPanel1.setBackground(Color.BLACK);
                    jdCodigo.setModal(true);
                    jdCodigo.pack();
                    jdCodigo.setLocationRelativeTo(this);
                    jdCodigo.setVisible(true);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "OcurriÃ³ un Error! \nEs probable que usted haya Ingresado mal un Dato.\nFavor Revisar el Diagrama", "Error", 0);
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jmiCodigoActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        //Se toma el modelo del arbol:
        DefaultTreeModel modelArbol = (DefaultTreeModel) actualT.getModel();
        //Se toma la raiz del arbol
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelArbol.getRoot();
        //Este String es la variable
        String X = jcEncapsulamiento.getSelectedItem().toString() + ": " + jcTipoAtributo.getSelectedItem().toString() + " " + txNombreAtributo.getText();
        for (int i = 0; i < raiz.getChildCount(); i++) {
            if (raiz.getChildAt(i).toString().equals("<Atributos>")) {
                DefaultMutableTreeNode p = new DefaultMutableTreeNode(X);
                ((DefaultMutableTreeNode) raiz.getChildAt(i)).add(p);
            }
        }
        modelArbol.reload();
        JOptionPane.showMessageDialog(this, "Atributo Guardado.", "Atributo", 1);
        String x = "";
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        for (int i = 0; i < root.getChildCount(); i++) {
            if (root.getChildAt(i).toString().equals("<Atributos>")) {
                for (int j = 0; j < root.getChildAt(i).getChildCount(); j++) {
                    x += "" + (DefaultMutableTreeNode) root.getChildAt(i).getChildAt(j) + "\n";
                }
            }
        }
        txConfiguracion.setText("Atributos de la Clase <<" + model.getRoot() + ">>:\n" + x);
        x = "";
        txtConfiguracion.setText("Atributos:");
        txNombreAtributo.setText("â€ƒ");
        model.reload();
        this.repaint();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jbAgregarMetodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAgregarMetodoMouseClicked
        if (jcParametros.getSelectedIndex() == 0) {
            parametros = "|";
        }
        DefaultTreeModel modelArbol = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelArbol.getRoot();
        String X = jcTipoMetodo.getSelectedItem().toString() + "_" + txNombreMetodo.getText() + "_" + parametros;
        for (int i = 0; i < raiz.getChildCount(); i++) {
            if (raiz.getChildAt(i).toString().equals("<Metodos>")) {
                DefaultMutableTreeNode p = new DefaultMutableTreeNode(X);
                ((DefaultMutableTreeNode) raiz.getChildAt(i)).add(p);
            }
        }
        modelArbol.reload();
        JOptionPane.showMessageDialog(this, "MÃ©todo Guardado.", "MÃ©todo", 1);
        String x = "";
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        for (int i = 0; i < root.getChildCount(); i++) {
            if (root.getChildAt(i).toString().equals("<Metodos>")) {
                for (int j = 0; j < root.getChildAt(i).getChildCount(); j++) {
                    x += "" + (DefaultMutableTreeNode) root.getChildAt(i).getChildAt(j) + "\n";
                }
            }
        }
        txConfiguracion.setText("MÃ©todos de la Clase <<" + model.getRoot() + ">>:\n" + x);
        x = "";
        txtConfiguracion.setText("MÃ©todos:");
        txNombreMetodo.setText("");
        jcParametros.setSelectedIndex(0);
        parametros = " ";
        model.reload();
        this.repaint();
    }//GEN-LAST:event_jbAgregarMetodoMouseClicked

    private void jmiColorClaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiColorClaseActionPerformed
        actualT.setBackground(JColorChooser.showDialog(this, "Seleccione el Color:", Color.WHITE));
        this.repaint();
    }//GEN-LAST:event_jmiColorClaseActionPerformed

    private void jmiFuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFuenteActionPerformed
        String[] Fuentes = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
        fuente = (String) JOptionPane.showInputDialog(null, "Seleccione una Fuente:", "Fuentes", 3, null, Fuentes, Fuentes[0]);
        actualT.setFont(new java.awt.Font(fuente, 1, 11));
        this.repaint();
    }//GEN-LAST:event_jmiFuenteActionPerformed

    private void jcEncapsulamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcEncapsulamientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcEncapsulamientoActionPerformed

    private void jbAgregarParametroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAgregarParametroMouseClicked
        parametros += jcTipoParametro.getSelectedItem().toString() + ":" + txNombreParametro.getText() + ",";
        JOptionPane.showMessageDialog(jdParametro, "ParÃ¡metro Guardado", "ParÃ¡metros", 1);
        txNombreParametro.setText("");
    }//GEN-LAST:event_jbAgregarParametroMouseClicked

    private void jcParametrosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcParametrosItemStateChanged
        //Con esto vemos si el que estÃ¡ seleccionado es la de Agreagr Parametro para mostarr el Jdialog de agregar parametros
        if (jcParametros.getSelectedItem().equals("Agregar ParÃ¡metro")) {
            jdParametro.setModal(true);
            jdParametro.pack();
            jdParametro.setLocationRelativeTo(this);
            jdParametro.setVisible(true);
        }
    }//GEN-LAST:event_jcParametrosItemStateChanged

    private void jbAgregarParametroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarParametroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbAgregarParametroActionPerformed

    private void jbVerMetodosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbVerMetodosMouseClicked
        String x = "";
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        for (int i = 0; i < root.getChildCount(); i++) {
            if (root.getChildAt(i).toString().equals("<Metodos>")) {
                for (int j = 0; j < root.getChildAt(i).getChildCount(); j++) {
                    x += "" + (DefaultMutableTreeNode) root.getChildAt(i).getChildAt(j) + "\n";
                }
            }
        }
        txConfiguracion.setText("MÃ©todos de la Clase <<" + model.getRoot() + ">>:\n" + x);
        x = "";
        txConfiguracion.setEnabled(true);
        txtConfiguracion.setText("MÃ©todos:");
        txConfiguracion.setEditable(false);
        JOptionPane.showMessageDialog(this, "Vea el Panel de la Izquierda.", "InformaciÃ³n", 1);
    }//GEN-LAST:event_jbVerMetodosMouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        CambiarColorTexto();
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        CambiarFuente();
    }//GEN-LAST:event_jButton5MouseClicked

    private void jbSetTextoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbSetTextoMouseClicked
        CambiarTexto();
    }//GEN-LAST:event_jbSetTextoMouseClicked

    private void sptamanioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sptamanioStateChanged
        CambiarTamanio();
    }//GEN-LAST:event_sptamanioStateChanged

    private void jbVerAtributoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbVerAtributoMouseClicked
        String x = "";
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        for (int i = 0; i < root.getChildCount(); i++) {
            if (root.getChildAt(i).toString().equals("<Atributos>")) {
                for (int j = 0; j < root.getChildAt(i).getChildCount(); j++) {
                    x += "" + (DefaultMutableTreeNode) root.getChildAt(i).getChildAt(j) + "\n";
                }
            }
        }
        txConfiguracion.setText("Atributos de la Clase <<" + model.getRoot() + ">>:\n" + x);
        txConfiguracion.setEnabled(true);
        txtConfiguracion.setText("Atributos:");
        txConfiguracion.setEditable(false);
        x = "";
        JOptionPane.showMessageDialog(this, "Vea el Panel de la Izquierda.", "InformaciÃ³n", 1);
    }//GEN-LAST:event_jbVerAtributoMouseClicked

    private void jbMetodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMetodoMouseClicked
        String x = "";
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        for (int i = 0; i < root.getChildCount(); i++) {
            if (root.getChildAt(i).toString().equals("<Metodos>")) {
                for (int j = 0; j < root.getChildAt(i).getChildCount(); j++) {
                    x += "" + (DefaultMutableTreeNode) root.getChildAt(i).getChildAt(j) + "\n";
                }
            }
        }
        txConfiguracion.setText("MÃ©todos de la Clase <<" + model.getRoot() + ">>:\n" + x);
        x = "";
        txConfiguracion.setEnabled(true);
        txtConfiguracion.setText("MÃ©todos:");
        txConfiguracion.setEditable(false);
        jdAgregarMetodo.setModal(true);
        jdAgregarMetodo.pack();
        jdAgregarMetodo.setLocationRelativeTo(this);
        jdAgregarMetodo.setVisible(true);
    }//GEN-LAST:event_jbMetodoMouseClicked

    private void jbAtributoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAtributoMouseClicked
        String x = "";
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        for (int i = 0; i < root.getChildCount(); i++) {
            if (root.getChildAt(i).toString().equals("<Atributos>")) {
                for (int j = 0; j < root.getChildAt(i).getChildCount(); j++) {
                    x += "" + (DefaultMutableTreeNode) root.getChildAt(i).getChildAt(j) + "\n";
                }
            }
        }
        txConfiguracion.setText("Atributos de la Clase <<" + model.getRoot() + ">>:\n" + x);
        txConfiguracion.setEnabled(true);
        txtConfiguracion.setText("Atributos:");
        txConfiguracion.setEditable(false);
        x = "";
        jdAgregarAtributo.setModal(true);
        jdAgregarAtributo.pack();
        jdAgregarAtributo.setLocationRelativeTo(this);
        jdAgregarAtributo.setVisible(true);
    }//GEN-LAST:event_jbAtributoMouseClicked

    private void jbColorClaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbColorClaseMouseClicked
        actualT.setBackground(JColorChooser.showDialog(this, "Seleccione el Color:", Color.WHITE));
        this.repaint();
    }//GEN-LAST:event_jbColorClaseMouseClicked

    private void jbFuenteClaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbFuenteClaseMouseClicked
        String[] Fuentes = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
        fuenteclase = (String) JOptionPane.showInputDialog(null, "Seleccione una Fuente:", "Fuentes", 3, null, Fuentes, Fuentes[0]);
        actualT.setFont(new java.awt.Font(fuenteclase, 1, 11));
        this.repaint();
    }//GEN-LAST:event_jbFuenteClaseMouseClicked

    private void jbColorClaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbColorClaseActionPerformed

    }//GEN-LAST:event_jbColorClaseActionPerformed

    private void jmPropiedadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmPropiedadesMouseClicked
        if (jmPropiedades.isEnabled()) {
            jpPropiedadesClase.setVisible(true);
        }
    }//GEN-LAST:event_jmPropiedadesMouseClicked

    private void stamanioclaseStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_stamanioclaseStateChanged
        actualT.setFont(new java.awt.Font(fuenteclase, 1, (Integer) stamanioclase.getValue()));
    }//GEN-LAST:event_stamanioclaseStateChanged

    private void jmiGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGuardarComoActionPerformed
        GuardarComo img = new GuardarComo();
        img.setBase(jpBase);
        img.setCodigo(taCodigo.getText());
        img.CrearImagen();
        img.EscribirImagen();
    }//GEN-LAST:event_jmiGuardarComoActionPerformed

    private void jmiAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAbrirActionPerformed
        try {
            if (centinela == 2) {
                AbrirDiagramaDeClases();
            } else if (centinela == 1) {
                AbrirDiagramaDeFlujo();
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jmiAbrirActionPerformed

    private void btNuevoDiagramaDeFlujoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoDiagramaDeFlujoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btNuevoDiagramaDeFlujoActionPerformed

    private void jbHerenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbHerenciaMouseClicked
        if (clases.size() > 1) {
            jdHerencia.setModal(true);
            jdHerencia.pack();
            jdHerencia.setLocationRelativeTo(this);
            jdHerencia.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Necesita tener al menos dos clases.", "Herencia", 2);
        }
    }//GEN-LAST:event_jbHerenciaMouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        try {
            if (jcHijo.getSelectedIndex() == jcpadre.getSelectedIndex()) {
                JOptionPane.showMessageDialog(this, "La clase no se puede heredar a sÃ­ misma!", "Herencia", 0);
            } else {
                int posPadre = jcpadre.getSelectedIndex();
                String Herencia = ((JTree) clases.get(posPadre)).getModel().getRoot().toString();
                System.out.println("Clase Padre:" + Herencia);
                clasehija = jcHijo.getSelectedIndex();
                ((JTree) clases.get(clasehija)).setName(": public " + Herencia);
                System.out.println("Clase Hija:" + ((JTree) clases.get(clasehija)).getModel().getRoot().toString());
                JOptionPane.showMessageDialog(this, "Herencia Aplicada.", "Herencia", 3);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Debe Seleccionar las clases!", "Error", 0);
        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jmiImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiImprimirActionPerformed
        PrinterJob printJob = PrinterJob.getPrinterJob();
        GuardarComo img = new GuardarComo();
        img.setBase(jpBase);
        img.CrearImagen();
        printJob.setPrintable(new ImagePrintable(printJob, img.GetImagen()));
        if (printJob.printDialog()) {
            try {
                printJob.print();
            } catch (PrinterException prt) {
                prt.printStackTrace();
            }
        }
        JOptionPane.showMessageDialog(this, "ImpresiÃ³n realizada correctamente.", "ImpresiÃ³n", 1);
    }//GEN-LAST:event_jmiImprimirActionPerformed

    private void jmiPegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPegarActionPerformed
        if (centinela == 1) {
            JLabel objeto;
            objeto = new JLabel();
            objeto.setOpaque(true);
            objeto.setBackground(copiaro.getBackground());
            objeto.setHorizontalTextPosition(SwingConstants.CENTER);
            this.jpBase.add(objeto);
            objeto.setLocation(X, Y);
            objeto.setIcon(copiaro.getIcon());
            objeto.setName(copiaro.getName());
            objeto.setForeground(copiaro.getForeground());
            objeto.setFont(copiaro.getFont());
            objeto.setDisplayedMnemonic(copiaro.getDisplayedMnemonic());
            copia++;
            objeto.setText(copiaro.getText() + "(" + copia + ")");
            objeto.setSize(135, 90);
            objeto.setDisplayedMnemonic(copiaro.getDisplayedMnemonic());
            actual = objeto;
            objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    actual = objeto;
                    txSeleccionado.setText(objeto.getText());
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                        if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 770)) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                                if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                    objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                            objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                                }
                            }
                        }
                    }
                }
            });
            objeto.addMouseListener(new MouseListener() {
                public void mouseClicked(MouseEvent evt) {
                    actual = objeto;
                    txSeleccionado.setText(objeto.getText());
                    mDiseno.setEnabled(true);
                    mEdiciontx.setEnabled(true);
                    txtIf.setText("");
                    if (objeto.getDisplayedMnemonic() == 1 || objeto.getDisplayedMnemonic() == 7 || objeto.getDisplayedMnemonic() == 8) {
                        jmiAgregar.setVisible(false);
                        jmiVerPropiedades.setVisible(false);
                        jbAPropiedades.setEnabled(false);
                        jbVerP.setEnabled(false);
                    } else {
                        jmiAgregar.setVisible(true);
                        jmiVerPropiedades.setVisible(true);
                        jbAPropiedades.setEnabled(true);
                        jbVerP.setEnabled(true);
                    }
                    if (evt.isMetaDown()) {
                        copiaro = objeto;
                        ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                    }
                }

                public void mouseEntered(MouseEvent arg0) {
                    objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                    objeto.setToolTipText(objeto.getText());
                }

                public void mouseExited(MouseEvent arg0) {
                    objeto.setBorder(null);
                }

                public void mousePressed(MouseEvent arg0) {
                    txSeleccionado.setText(objeto.getText());
                    actual = objeto;
                }

                public void mouseReleased(MouseEvent arg0) {
                    actual = objeto;
                }
            });
            componentes.add(objeto);
        } else if (centinela == 2) {
            nombresdeclase.add(copiart.getModel().getRoot());
            copia++;
            String nombre = copiart.getModel().getRoot().toString() + "(" + copia + ")";
            DefaultMutableTreeNode Root = new DefaultMutableTreeNode(nombre);
            DefaultTreeModel modelo = new DefaultTreeModel(Root);
            JTree arbol = new JTree(modelo);
            DefaultTreeModel m = (DefaultTreeModel) arbol.getModel();
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
            DefaultMutableTreeNode atributos = new DefaultMutableTreeNode("<Atributos>");
            DefaultMutableTreeNode metodos = new DefaultMutableTreeNode("<Metodos>");
            raiz.add(atributos);
            raiz.add(metodos);
            arbol.setName(copiart.getName());
            arbol.setSize(150, 150);
            arbol.setBackground(new java.awt.Color(192, 255, 243));
            arbol.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
            tree++;
            arbol.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            arbol.addMouseListener(new MouseListener() {
                public void mouseClicked(MouseEvent evt) {
                    actualT = arbol;
                    jmPropiedades.setEnabled(true);
                    txSeleccionado1.setText(modelo.getRoot().toString());
                    int row = arbol.getClosestRowForLocation(evt.getX(), evt.getY());
                    arbol.setSelectionRow(row);
                    Object v1 = arbol.getSelectionPath().getLastPathComponent();
                    nodoS = (DefaultMutableTreeNode) v1;
                    if (evt.isMetaDown()) {
                        actualT = arbol;
                        copiart = arbol;
                        if (v1.toString().contains("<Metodos>")) {
                            jmiEliminarNodo.setVisible(false);
                        } else if (v1.toString().contains("<Atributos>")) {
                            jmiEliminarNodo.setVisible(false);
                        } else if (v1.toString().contains(arbol.getModel().getRoot().toString())) {
                            jmiEliminarNodo.setVisible(false);
                        } else {
                            jmiEliminarNodo.setVisible(true);
                        }
                        ppMenuClases.show(evt.getComponent(), evt.getX(), evt.getY());
                    }
                }

                public void mouseEntered(MouseEvent arg0) {
                    arbol.setBorder(BorderFactory.createLineBorder(new java.awt.Color(254, 146, 0), 2));
                    arbol.setToolTipText(modelo.getRoot().toString());
                }

                public void mouseExited(MouseEvent arg0) {
                    arbol.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                }

                public void mousePressed(MouseEvent arg0) {
                    actualT = arbol;
                    txSeleccionado1.setText(modelo.getRoot().toString());
                }

                public void mouseReleased(MouseEvent arg0) {
                }
            });
            arbol.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    actualT = arbol;
                    txSeleccionado1.setText(modelo.getRoot().toString());
                    if (((arbol.getLocation().x + evt.getX() - arbol.getWidth() / 2) > 0)) {
                        if (((arbol.getLocation().x + evt.getX() - arbol.getWidth() / 2) < 770)) {
                            if ((arbol.getLocation().y + evt.getY() - arbol.getWidth() / 2) > -15) {
                                if ((arbol.getLocation().y + evt.getY() - arbol.getWidth() / 2) < 500) {
                                    arbol.setLocation(arbol.getLocation().x + evt.getX() - arbol.getWidth() / 2,
                                            arbol.getLocation().y + evt.getY() - arbol.getHeight() / 2);
                                }
                            }
                        }
                    }
                }
            });
            DefaultTreeModel modelArbol = (DefaultTreeModel) copiart.getModel();
            DefaultMutableTreeNode raiz1 = (DefaultMutableTreeNode) modelArbol.getRoot();
            for (int i = 0; i < raiz1.getChildCount(); i++) {
                try {
                    if (raiz1.getChildAt(i).toString().equals("<Metodos>")) {
                        for (int j = 0; j < raiz1.getChildAt(i).getChildCount(); j++) {
                            String xx = raiz1.getChildAt(i).getChildAt(j).toString();
                            DefaultMutableTreeNode p = new DefaultMutableTreeNode(xx);
                            ((DefaultMutableTreeNode) raiz.getChildAt(i)).add(p);
                        }
                    } else if (raiz1.getChildAt(i).toString().equals("<Atributos>")) {
                        for (int j = 0; j < raiz1.getChildAt(i).getChildCount(); j++) {
                            String xx = raiz1.getChildAt(i).getChildAt(j).toString();
                            DefaultMutableTreeNode p = new DefaultMutableTreeNode(xx);
                            ((DefaultMutableTreeNode) raiz.getChildAt(i)).add(p);
                        }
                    }
                } catch (Exception e) {
                }
            }
            this.jpBase.add(arbol);
            arbol.setLocation(X, Y);
            clases.add(arbol);
            jpBase.repaint();
            DefaultComboBoxModel model = (DefaultComboBoxModel) jcpadre.getModel();
            DefaultComboBoxModel modelH = (DefaultComboBoxModel) jcHijo.getModel();
            model.addElement(modelo.getRoot());
            modelH.addElement(modelo.getRoot());
            jcHijo.setModel(modelH);
            jcpadre.setModel(model);
        }
    }//GEN-LAST:event_jmiPegarActionPerformed

    private void jmiCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCopiarActionPerformed
        copiar++;
        copia = 0;
    }//GEN-LAST:event_jmiCopiarActionPerformed

    private void jmiCopiar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCopiar1ActionPerformed
        copiar++;
        copia = 0;
    }//GEN-LAST:event_jmiCopiar1ActionPerformed

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        String x = actual.getName() + jcTipoVariable.getSelectedItem().toString() + " " + txNombreVariable.getText() + ";";
        actual.setName(x);
        DefaultComboBoxModel model = (DefaultComboBoxModel) jcb_variables.getModel();
        DefaultComboBoxModel model1 = (DefaultComboBoxModel) jcb_variables1.getModel();
        DefaultComboBoxModel model2 = (DefaultComboBoxModel) jcb_variables2.getModel();
        DefaultComboBoxModel model3 = (DefaultComboBoxModel) jcb_impresion.getModel();
        model.addElement(txNombreVariable.getText());
        model1.addElement(txNombreVariable.getText());
        model2.addElement(txNombreVariable.getText());
        model3.addElement(txNombreVariable.getText());
        jcb_variables.setModel(model);
        jcb_variables1.setModel(model1);
        jcb_variables2.setModel(model2);
        jcb_impresion.setModel(model3);
        jcb_whileV.setModel(model);
        jcb_whileV1.setModel(model1);
        jcb_Proceso.setModel(model);
        jcb_proceso2.setModel(model1);
        jcb_variableIgual.setModel(model3);
        variables.add(txNombreVariable.getText());
        JOptionPane.showMessageDialog(this, "Variable agregada.", "Variables", 1);
        txNombreVariable.setText("â€ƒ");
        actual.setToolTipText(actual.getToolTipText() + " (Ya Configurado)");
    }//GEN-LAST:event_jButton6MouseClicked

    private void jmiAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAgregarActionPerformed
        AgregarPropiedadesDiagramaDeFlujo();
    }//GEN-LAST:event_jmiAgregarActionPerformed

    private void jbVerPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbVerPMouseClicked
        VerPropiedadesDiagramaDeFlujo();
    }//GEN-LAST:event_jbVerPMouseClicked

    private void jbVerPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVerPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbVerPActionPerformed

    private void jmiVerPropiedadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiVerPropiedadesActionPerformed
        VerPropiedadesDiagramaDeFlujo();
    }//GEN-LAST:event_jmiVerPropiedadesActionPerformed

    private void jmiGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGuardarActionPerformed
        if (centinela == 1) {
            int nombre = (int) Math.floor(Math.random() * 9 + 1);
            GuardarDiagramaDeFlujo("DiagramaDeFlujo" + nombre, "DDF", "Diagrama De Flujo");
        } else if (centinela == 2) {
            int nombre = (int) Math.floor(Math.random() * 9 + 1);
            GuardarDiagramaDeClases("DiagramaDeClases" + nombre, "DDC", "Diagramas De Clases");
        }
    }//GEN-LAST:event_jmiGuardarActionPerformed

    private void jbGuardarCodigoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbGuardarCodigoMouseClicked
        String Nombre = "";
        String Tipo = "Archivo de Texto";
        String Extension = "txt";
        if (centinela == 1) {
            Nombre = "CodigoDiagramaDeFlujo";
        } else {
            Nombre = "CodigoDiagramaDeClases";
        }
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(Tipo, Extension);
        jfc.addChoosableFileFilter(filtro);
        jfc.setSelectedFile(new File(Nombre + "." + Extension));
        int seleccion = jfc.showSaveDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File f;
            FileWriter fw = null;
            BufferedWriter bw = null;
            try {
                f = new File(jfc.getSelectedFile().getPath());
                fw = new FileWriter(f, false);
                bw = new BufferedWriter(fw);
                String codigo = taCodigo.getText();
                bw.write(codigo);
                bw.flush();
            } catch (Exception e) {
            }
            try {
                bw.close();
            } catch (IOException ex) {
                Logger.getLogger(PanelPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(PanelPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "CÃ³digo Guardado.", "CÃ³digo", 1);
        }
    }//GEN-LAST:event_jbGuardarCodigoMouseClicked

    private void txNombreAtributoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txNombreAtributoMouseClicked
        txNombreAtributo.setText("");
    }//GEN-LAST:event_txNombreAtributoMouseClicked

    private void txNombreVariableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txNombreVariableMouseClicked
        txNombreVariable.setText("");
    }//GEN-LAST:event_txNombreVariableMouseClicked

    private void txNombreParametroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txNombreParametroMouseClicked
        txNombreParametro.setText("");
    }//GEN-LAST:event_txNombreParametroMouseClicked

    private void txNombreMetodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txNombreMetodoMouseClicked
        txNombreMetodo.setText("");
    }//GEN-LAST:event_txNombreMetodoMouseClicked

    private void jbOrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbOrMouseClicked
        try {
            String relacion = "";
            String mod = "";
            if (jcbRelacion.getSelectedItem().equals("Igual que")) {
                relacion = " == ";
            } else if (jcbRelacion.getSelectedItem().equals("Distinto de")) {
                relacion = " != ";
            } else if (jcbRelacion.getSelectedItem().equals("Menor que")) {
                relacion = " < ";
            } else if (jcbRelacion.getSelectedItem().equals("Menor o Igual")) {
                relacion = " <= ";
            } else if (jcbRelacion.getSelectedItem().equals("Mayor que")) {
                relacion = " > ";
            } else if (jcbRelacion.getSelectedItem().equals("Mayor o igual que")) {
                relacion = " >= ";
            } else if (jcbRelacion.getSelectedItem().equals("Residuo igual que")) {
                relacion = " % ";
                mod = " == ";
            } else if (jcbRelacion.getSelectedItem().equals("Residuo distinto de")) {
                relacion = " % ";
                mod = " != ";
            }
            if (mod.length() >= 1) {
                if (actual.getName().contains("||") || actual.getName().contains("&&")) {
                    actual.setName(actual.getName() + "(" + jcb_variables.getSelectedItem().toString() + relacion + jcb_variables1.getSelectedItem().toString() + mod + jcb_variables2.getSelectedItem().toString() + ")" + " || ");
                } else {
                    actual.setName(actual.getName() + "((" + jcb_variables.getSelectedItem().toString() + relacion + jcb_variables1.getSelectedItem().toString() + mod + jcb_variables2.getSelectedItem().toString() + ")" + " || ");
                }
            } else {
                if (actual.getName().contains("||") || actual.getName().contains("&&")) {
                    actual.setName(actual.getName() + "(" + jcb_variables.getSelectedItem().toString() + relacion + jcb_variables1.getSelectedItem().toString() + ")" + " || ");
                } else {
                    actual.setName(actual.getName() + "((" + jcb_variables.getSelectedItem().toString() + relacion + jcb_variables1.getSelectedItem().toString() + ")" + " || ");
                }
            }
            jcbRelacion.setSelectedIndex(0);
            jcb_variables.setSelectedIndex(0);
            jcb_variables1.setSelectedIndex(0);
            txtIf.setText(actual.getName());
            JOptionPane.showMessageDialog(this, "Ahora introduzca la otra condiciÃ³n", "Or", 1);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No hay datos todavÃ­a!", "Error", 0);
        }
        System.out.println("Desicion: " + actual.getName());
    }//GEN-LAST:event_jbOrMouseClicked

    private void jbAndMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAndMouseClicked
        try {
            String relacion = "";
            String mod = "";
            if (jcbRelacion.getSelectedItem().equals("Igual que")) {
                relacion = " == ";
            } else if (jcbRelacion.getSelectedItem().equals("Distinto de")) {
                relacion = " != ";
            } else if (jcbRelacion.getSelectedItem().equals("Menor que")) {
                relacion = " < ";
            } else if (jcbRelacion.getSelectedItem().equals("Menor o Igual")) {
                relacion = " <= ";
            } else if (jcbRelacion.getSelectedItem().equals("Mayor que")) {
                relacion = " > ";
            } else if (jcbRelacion.getSelectedItem().equals("Mayor o igual que")) {
                relacion = " >= ";
            } else if (jcbRelacion.getSelectedItem().equals("Residuo igual que")) {
                relacion = " % ";
                mod = " == ";
            } else if (jcbRelacion.getSelectedItem().equals("Residuo distinto de")) {
                relacion = " % ";
                mod = " != ";
            }
            if (mod.length() >= 1) {
                if (actual.getName().contains("||") || actual.getName().contains("&&")) {
                    actual.setName(actual.getName() + "(" + jcb_variables.getSelectedItem().toString() + relacion + jcb_variables1.getSelectedItem().toString() + mod + jcb_variables2.getSelectedItem().toString() + ")" + " && ");
                } else {
                    actual.setName(actual.getName() + "((" + jcb_variables.getSelectedItem().toString() + relacion + jcb_variables1.getSelectedItem().toString() + mod + jcb_variables2.getSelectedItem().toString() + ")" + " && ");
                }
            } else {
                if (actual.getName().contains("||") || actual.getName().contains("&&")) {
                    actual.setName(actual.getName() + "(" + jcb_variables.getSelectedItem().toString() + relacion + jcb_variables1.getSelectedItem().toString() + ")" + " && ");
                } else {
                    actual.setName(actual.getName() + "((" + jcb_variables.getSelectedItem().toString() + relacion + jcb_variables1.getSelectedItem().toString() + ")" + " && ");
                }
            }
            jcbRelacion.setSelectedIndex(0);
            jcb_variables.setSelectedIndex(0);
            jcb_variables1.setSelectedIndex(0);
            txtIf.setText(actual.getName());
            JOptionPane.showMessageDialog(this, "Ahora introduzca la otra condiciÃ³n", "Or", 1);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No hay datos todavÃ­a!", "Error", 0);
        }
        System.out.println("Desicion: " + actual.getName());
    }//GEN-LAST:event_jbAndMouseClicked

    private void jcbRelacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbRelacionItemStateChanged
        if (jcbRelacion.getSelectedIndex() == 6 || jcbRelacion.getSelectedIndex() == 7) {
            jLabel46.setVisible(true);
            jcb_variables2.setVisible(true);
        } else {
            jLabel46.setVisible(false);
            jcb_variables2.setVisible(false);
        }
    }//GEN-LAST:event_jcbRelacionItemStateChanged

    private void jbGuardarIfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbGuardarIfMouseClicked
        try {
            String relacion = "";
            String mod = "";
            if (jcbRelacion.getSelectedItem().equals("Igual que")) {
                relacion = " == ";
            } else if (jcbRelacion.getSelectedItem().equals("Distinto de")) {
                relacion = " != ";
            } else if (jcbRelacion.getSelectedItem().equals("Menor que")) {
                relacion = " < ";
            } else if (jcbRelacion.getSelectedItem().equals("Menor o Igual")) {
                relacion = " <= ";
            } else if (jcbRelacion.getSelectedItem().equals("Mayor que")) {
                relacion = " > ";
            } else if (jcbRelacion.getSelectedItem().equals("Mayor o igual que")) {
                relacion = " >= ";
            } else if (jcbRelacion.getSelectedItem().equals("Residuo igual que")) {
                relacion = " % ";
                mod = " == ";
            } else if (jcbRelacion.getSelectedItem().equals("Residuo distinto de")) {
                relacion = " % ";
                mod = " != ";
            }
            if (actual.getName().contains("||") || actual.getName().contains("&&")) {
                if (mod.length() >= 1) {
                    actual.setName(actual.getName() + "(" + jcb_variables.getSelectedItem() + relacion + jcb_variables1.getSelectedItem() + mod + jcb_variables2.getSelectedItem() + "))");
                } else {
                    actual.setName(actual.getName() + "(" + jcb_variables.getSelectedItem() + relacion + jcb_variables1.getSelectedItem() + "))");
                }
            } else {
                actual.setName(actual.getName() + "(" + jcb_variables.getSelectedItem() + relacion + jcb_variables1.getSelectedItem() + ")");
            }
            jcbRelacion.setSelectedIndex(0);
            jcb_variables.setSelectedIndex(0);
            jcb_variables1.setSelectedIndex(0);
            txtIf.setText(actual.getName());
            JOptionPane.showMessageDialog(this, "Ahora introduzca la otra condiciÃ³n", "Or", 1);
            actual.setToolTipText(actual.getToolTipText() + " (Ya Configurado)");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No hay datos todavÃ­a!", "Error", 0);
        }
    }//GEN-LAST:event_jbGuardarIfMouseClicked

    private void jcb_variablesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_variablesItemStateChanged
        try {
            txtIf.setText(actual.getName());
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jcb_variablesItemStateChanged

    private void jbAgregarVariableAImpresionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAgregarVariableAImpresionMouseClicked
        ta_impresion.append("_" + jcb_impresion.getSelectedItem().toString() + "_");
    }//GEN-LAST:event_jbAgregarVariableAImpresionMouseClicked

    private void jmiAgregarVariableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAgregarVariableActionPerformed
        jcb_impresion.setVisible(true);
        jbAgregarVariableAImpresion.setVisible(true);
        jLabel52.setVisible(true);
    }//GEN-LAST:event_jmiAgregarVariableActionPerformed

    private void ta_impresionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ta_impresionMouseClicked
        if (evt.isMetaDown() && (jcb_impresion.getItemCount()) != 0) {
            ppImpresion.show(ta_impresion, evt.getX(), evt.getY());
        } else {
            jcb_impresion.setVisible(false);
            jbAgregarVariableAImpresion.setVisible(false);
            jLabel52.setVisible(false);
        }
    }//GEN-LAST:event_ta_impresionMouseClicked

    private void jcb_impresionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_impresionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_impresionActionPerformed

    private void jcb_impresionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_impresionItemStateChanged
    }//GEN-LAST:event_jcb_impresionItemStateChanged

    private void jbGuardarImpresionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbGuardarImpresionMouseClicked
        actual.setName(ta_impresion.getText());
        JOptionPane.showMessageDialog(this, "Impresion guardada.", "ImpresiÃ³n", 1);
        ta_impresion.setText("");
        actual.setToolTipText(actual.getToolTipText() + " (Ya Configurado)");
    }//GEN-LAST:event_jbGuardarImpresionMouseClicked

    private void jbAPropiedadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAPropiedadesMouseClicked
        AgregarPropiedadesDiagramaDeFlujo();
    }//GEN-LAST:event_jbAPropiedadesMouseClicked

    private void jcb_operacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_operacionItemStateChanged
        if (jcb_operacion.getSelectedIndex() == 5) {
            jcb_Proceso.setEnabled(false);
            OPV.setEnabled(false);
            OPA.setEnabled(false);
            jcb_operacion.setEnabled(false);
            jcb_proceso2.setEnabled(false);
            OPV1.setEnabled(false);
            if (op < 1) {
                Operacion = jcb_variableIgual + "=" + JOptionPane.showInputDialog(this, "Por favor Ingrese la OperaciÃ³n:", "Ingresar OperaciÃ³n", 1);
                txtOperacion.setText(Operacion);
                actual.setName(Operacion);
                op++;
            }
        } else if (jcb_operacion.getSelectedIndex() == 4) {
            jcb_Proceso.setVisible(false);
            OPV.setVisible(false);
            jcb_variableIgual.setVisible(false);
            OPV2.setVisible(false);
        } else {
            jcb_Proceso.setVisible(true);
            OPV.setVisible(true);
            OPA.setVisible(true);
            jcb_operacion.setVisible(true);
            jcb_proceso2.setVisible(true);
            jcb_variableIgual.setVisible(true);
            OPV2.setVisible(true);
        }
    }//GEN-LAST:event_jcb_operacionItemStateChanged

    private void jcb_operacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_operacionActionPerformed

    }//GEN-LAST:event_jcb_operacionActionPerformed

    private void jbGuardarImpresion1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbGuardarImpresion1MouseClicked
        if (Operacion.length() > 5) {
            String operando = "";
            txtOperacion.setText(actual.getName());
            System.out.println(actual.getName());
        } else {
            String operando = "";
            if (jcb_operacion.getSelectedItem().equals("Suma")) {
                operando = " + ";
                actual.setName(jcb_variableIgual.getSelectedItem() + "=" + jcb_Proceso.getSelectedItem() + operando + jcb_proceso2.getSelectedItem());
            } else if (jcb_operacion.getSelectedItem().equals("Resta")) {
                operando = " - ";
                actual.setName(jcb_variableIgual.getSelectedItem() + "=" + jcb_Proceso.getSelectedItem() + operando + jcb_proceso2.getSelectedItem());
            } else if (jcb_operacion.getSelectedItem().equals("MultiplicaciÃ³n")) {
                operando = " * ";
                actual.setName(jcb_variableIgual.getSelectedItem() + "=" + jcb_Proceso.getSelectedItem() + operando + jcb_proceso2.getSelectedItem());
            } else if (jcb_operacion.getSelectedItem().equals("DivisiÃ³n")) {
                operando = " / ";
                actual.setName(jcb_variableIgual.getSelectedItem() + "=" + jcb_Proceso.getSelectedItem() + operando + jcb_proceso2.getSelectedItem());
            } else if (jcb_operacion.getSelectedIndex() == 4) {
                actual.setName("cin<<" + jcb_proceso2.getSelectedItem());
            }
        }
        System.out.println(actual.getName());
        jcb_operacion.setSelectedIndex(0);
        jcb_Proceso.setEnabled(true);
        OPV.setEnabled(true);
        OPA.setEnabled(true);
        jcb_operacion.setEnabled(true);
        jcb_proceso2.setEnabled(true);
        OPV1.setEnabled(true);
        txtOperacion.setText(actual.getName());
        op = 0;
        JOptionPane.showMessageDialog(this, "Operacion Guardada", "Operacion", 1);
    }//GEN-LAST:event_jbGuardarImpresion1MouseClicked

    private void jcb_proceso2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_proceso2ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_proceso2ItemStateChanged

    private void jcb_proceso2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_proceso2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_proceso2ActionPerformed

    private void jcb_ProcesoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_ProcesoItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_ProcesoItemStateChanged

    private void jcb_ProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_ProcesoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_ProcesoActionPerformed

    private void jbGuardarImpresion2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbGuardarImpresion2MouseClicked
        try {
            String relacion = "";
            if (jcbRelacionWhile.getSelectedItem().equals("Igual que")) {
                relacion = " == ";
            } else if (jcbRelacionWhile.getSelectedItem().equals("Distinto de")) {
                relacion = " != ";
            } else if (jcbRelacionWhile.getSelectedItem().equals("Menor que")) {
                relacion = " < ";
            } else if (jcbRelacionWhile.getSelectedItem().equals("Menor o Igual")) {
                relacion = " <= ";
            } else if (jcbRelacionWhile.getSelectedItem().equals("Mayor que")) {
                relacion = " > ";
            } else if (jcbRelacionWhile.getSelectedItem().equals("Mayor o igual que")) {
                relacion = " >= ";
            } else if (jcbRelacionWhile.getSelectedItem().equals("Residuo igual que")) {
                relacion = " % ";
            } else if (jcbRelacionWhile.getSelectedItem().equals("Residuo distinto de")) {
                relacion = " % ";
            }
            if (jcb_while2.getSelectedIndex() <= 1) {
                actual.setName("(" + jcb_whileV.getSelectedItem() + " " + relacion + jcb_while2.getSelectedItem() + ")");
            } else {
                actual.setName("(" + jcb_whileV.getSelectedItem() + " " + relacion + jcb_whileV1.getSelectedItem() + ")");
            }
            txtWhile.setText(actual.getName());
            JOptionPane.showMessageDialog(this, "Guardado.", "Asignacion de While", 1);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jbGuardarImpresion2MouseClicked

    private void jcb_while2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_while2ItemStateChanged
        if (jcb_while2.getSelectedIndex() == 2) {
            jcb_whileV1.setVisible(true);
            jlbwhile.setVisible(true);
        } else {
            jcb_whileV1.setVisible(false);
            jlbwhile.setVisible(false);
        }
    }//GEN-LAST:event_jcb_while2ItemStateChanged

    private void jcb_while2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_while2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_while2ActionPerformed

    private void jcb_whileV1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_whileV1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_whileV1ItemStateChanged

    private void jcb_whileV1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_whileV1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_whileV1ActionPerformed

    private void jcbRelacionWhileItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbRelacionWhileItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbRelacionWhileItemStateChanged

    private void jcb_whileVItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_whileVItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_whileVItemStateChanged

    private void jcb_whileVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_whileVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_whileVActionPerformed

    private void jbGuardarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbGuardarCodigoActionPerformed

    private void jcb_variableIgualItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_variableIgualItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_variableIgualItemStateChanged

    private void jcb_variableIgualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_variableIgualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_variableIgualActionPerformed

    private void jmiEliminarNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEliminarNodoActionPerformed
        try {
            DefaultTreeModel m = (DefaultTreeModel) actualT.getModel();
            m.removeNodeFromParent(nodoS);
            m.reload();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jmiEliminarNodoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PanelPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PanelPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PanelPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanelPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PanelPrincipal().setVisible(true);
            }
        });
    }

    public void AgregarObjeto(String Nombre, String imagen, int contador, int tipo) {
        //Se crea o objeto
        JLabel objeto;
        objeto = new JLabel();
        //Esto es para poder cambiar de color y ponerle ua imagen con fondo trasnparente
        objeto.setOpaque(true);
        //Se le pone un Color aleatorio
        objeto.setBackground(ColorAletorio());
        //Es para que el texto estÃ© en el centro del Label
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        //Esto diferencia cada tipo de objeto
        objeto.setDisplayedMnemonic(tipo);
        //Lo aÃ±ade al panel
        this.jpBase.add(objeto);
        //Pone una posicio  aleatroio deliminatdo por el tamaÃ±o del Panel BASE
        int x = (int) Math.floor(Math.random() * 770 + 1);
        int y = (int) Math.floor(Math.random() * 530 + 1);
        //se genera e la posicion aleatoria
        objeto.setLocation(x, y);
        //Esta es la imagen que se le pone
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        //El texto es el mismo nombre de la variable
        if (Nombre == "Separador" || Nombre == "SeparadorVertical") {
            objeto.setText("");
        } else {
            objeto.setText(Nombre + contador);
        }
        //Se define el tamaÃ±o
        objeto.setSize(135, 90);
        objeto.setName("");
        actual = objeto;
        //es para que cada vez que se acerce al objeto, el cursor cambie a una manita
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        //Los eventos para mover el Objeto
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getText());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 770)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getText());
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                txtIf.setText("");
                if (objeto.getDisplayedMnemonic() == 1 || objeto.getDisplayedMnemonic() == 7 || objeto.getDisplayedMnemonic() == 8) {
                    jmiAgregar.setVisible(false);
                    jmiVerPropiedades.setVisible(false);
                    jbAPropiedades.setEnabled(false);
                    jbVerP.setEnabled(false);
                } else {
                    jmiAgregar.setVisible(true);
                    jmiVerPropiedades.setVisible(true);
                    jbAPropiedades.setEnabled(true);
                    jbVerP.setEnabled(true);
                }
                if (evt.isMetaDown()) {
                    copiaro = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                objeto.setToolTipText(objeto.getText());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                txSeleccionado.setText(objeto.getText());
                actual = objeto;
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
        componentes.add(objeto);
    }

    public Color ColorAletorio() {
        int numero = (int) (Math.random() * 10) + 1;
        if (numero == 1) {
            color = Color.BLUE;
        }
        if (numero == 2) {
            color = Color.CYAN;
        }
        if (numero == 3) {
            color = Color.DARK_GRAY;
        }
        if (numero == 4) {
            color = Color.GRAY;
        }
        if (numero == 5) {
            color = Color.MAGENTA;
        }
        if (numero == 6) {
            color = Color.ORANGE;
        }
        if (numero == 7) {
            color = Color.PINK;
        }
        if (numero == 8) {
            color = Color.RED;
        }
        if (numero == 9) {
            color = Color.WHITE;
        }
        if (numero == 10) {
            color = Color.YELLOW;
        }
        return color;
    }

    public void CambiarColorComponente() {
        actual.setBackground(JColorChooser.showDialog(this, "Cambiar Color de Texto", Color.WHITE));
        this.repaint();
    }

    public void CambiarColorTexto() {
        actual.setForeground(JColorChooser.showDialog(this, "Cambiar Color de Texto", Color.WHITE));
        this.repaint();
    }

    public void EliminarComponente() {
        jpBase.remove(actual);
        txSeleccionado.setText("");
        componentes.remove(actual);
        actual = null;
        this.repaint();
    }

    public void CambiarFuente() {
        String[] Fuentes = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
        fuente = (String) JOptionPane.showInputDialog(this, "Seleccione una Fuente:", "Fuentes", 3, null, Fuentes, Fuentes[0]);
        actual.setFont(new java.awt.Font(fuente, 1, (Integer) sptamanio.getValue()));
        this.repaint();
    }

    public void CambiarTexto() {
        String x = JOptionPane.showInputDialog(this, "Ingrese el Texto:", "Texto de Componente", 1);
        actual.setText(x);
        this.repaint();
    }

    public void CambiarTamanio() {
        actual.setFont(new java.awt.Font(fuente, 1, (Integer) sptamanio.getValue()));
        this.repaint();
    }

    public void GuardarDiagramaDeClases(String Nombre, String Extension, String Tipo) {
        JFileChooser jfc = new JFileChooser();
        //El tipo de aquÃ­ es Diagrama de Clases
        //La extension "DDC"
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(Tipo, Extension);
        jfc.addChoosableFileFilter(filtro);
        jfc.setSelectedFile(new File(Nombre + "." + Extension));
        int seleccion = jfc.showSaveDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            AdministracionDiagramaClases ad = new AdministracionDiagramaClases(jfc.getSelectedFile().getPath());
            ad.CargarArchivo();
            ArrayList x = new ArrayList();
            ad.setClases(x);
            //Este arreglo toma los componentes del panel donde se ponen las clases
            Object Clases[] = jpBase.getComponents();
            //Solo guarda los arboles si me da tiempo guardo los demÃ¡s
            System.out.println("Las clases que se guardarÃ¡n son:");
            for (int i = 0; i < Clases.length; i++) {
                if (Clases[i] instanceof JTree) {
                    System.out.println(((JTree) Clases[i]).getModel().getRoot());
                    ad.AgregarClase((JTree) Clases[i]);
                }
            }
            try {
                ad.EscribirArchivo();
            } catch (IOException ex) {
                Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "Diagrama de Clases guardado correctamente.", "Guardado", 1);
        }
    }

    public void AbrirDiagramaDeClases() {
        try {
            JFileChooser jfc = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Diagrama de Clases", "DDC");
            jfc.addChoosableFileFilter(filtro);
            int seleccion = jfc.showOpenDialog(this);
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                String Path = jfc.getSelectedFile().getPath();
                //Esto reinicia la base donde se colocan las clases y el arraylist de clases y el de nombre permitidos
                clases = new ArrayList();
                nombresdeclase = new ArrayList();
                jpBase.removeAll();
                jpBase.repaint();
                DefaultComboBoxModel model = new DefaultComboBoxModel();
                DefaultComboBoxModel modelH = new DefaultComboBoxModel();
                AdministracionDiagramaClases ap = new AdministracionDiagramaClases(Path);
                ap.CargarArchivo();
                for (int i = 0; i < ap.getClases().size(); i++) {
                    JTree arbol = ((JTree) ap.getClases().get(i));
                    this.jpBase.add(arbol);
                    //Esto toma el nombre del nodo raiz
                    String nombre = arbol.getModel().getRoot().toString();
                    jpBase.repaint();
                    arbol.addMouseListener(new MouseListener() {
                        public void mouseClicked(MouseEvent evt) {
                            actualT = arbol;
                            jmPropiedades.setEnabled(true);
                            txSeleccionado1.setText(nombre);
                            int row = arbol.getClosestRowForLocation(evt.getX(), evt.getY());
                            arbol.setSelectionRow(row);
                            Object v1 = arbol.getSelectionPath().getLastPathComponent();
                            nodoS = (DefaultMutableTreeNode) v1;
                            if (evt.isMetaDown()) {
                                actualT = arbol;
                                copiart = arbol;
                                if (v1.toString().contains("<Metodos>")) {
                                    jmiEliminarNodo.setVisible(false);
                                } else if (v1.toString().contains("<Atributos>")) {
                                    jmiEliminarNodo.setVisible(false);
                                } else if (v1.toString().contains(arbol.getModel().getRoot().toString())) {
                                    jmiEliminarNodo.setVisible(false);
                                } else {
                                    jmiEliminarNodo.setVisible(true);
                                }
                                ppMenuClases.show(evt.getComponent(), evt.getX(), evt.getY());
                            }
                        }

                        public void mouseEntered(MouseEvent arg0) {
                            arbol.setBorder(BorderFactory.createLineBorder(new java.awt.Color(254, 146, 0), 2));
                            arbol.setToolTipText(nombre);
                        }

                        public void mouseExited(MouseEvent arg0) {
                            arbol.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                        }

                        public void mousePressed(MouseEvent arg0) {
                            actualT = arbol;
                            txSeleccionado1.setText(nombre);
                        }

                        public void mouseReleased(MouseEvent arg0) {
                        }
                    });
                    arbol.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                        public void mouseDragged(java.awt.event.MouseEvent evt) {
                            actualT = arbol;
                            txSeleccionado1.setText(nombre);
                            if (((arbol.getLocation().x + evt.getX() - arbol.getWidth() / 2) > 0)) {
                                if (((arbol.getLocation().x + evt.getX() - arbol.getWidth() / 2) < 770)) {
                                    if ((arbol.getLocation().y + evt.getY() - arbol.getWidth() / 2) > -15) {
                                        if ((arbol.getLocation().y + evt.getY() - arbol.getWidth() / 2) < 500) {
                                            arbol.setLocation(arbol.getLocation().x + evt.getX() - arbol.getWidth() / 2,
                                                    arbol.getLocation().y + evt.getY() - arbol.getHeight() / 2);
                                        }
                                    }
                                }
                            }
                        }
                    });
                    //Agregar la Clase al ArrayList y a las combobox
                    clases.add(arbol);
                    nombresdeclase.add(nombre);
                    model.addElement(nombre);
                    modelH.addElement(nombre);
                    jcHijo.setModel(modelH);
                    jcpadre.setModel(model);
                }
                if (jpBase.getComponents().length != 0) {
                    JOptionPane.showMessageDialog(this, "Archivo cargado correctamente.", "Cargar", 1);
                } else {
                    JOptionPane.showMessageDialog(this, "Archivo no compatible.", "Error Cargar", 0);
                }
            }
        } catch (Exception e) {
        }
    }

    public void GuardarDiagramaDeFlujo(String Nombre, String Extension, String Tipo) {
        JFileChooser jfc = new JFileChooser();
        //El tipo de aquÃ­ es Diagrama de Clases
        //La extension "DDF"
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(Tipo, Extension);
        jfc.addChoosableFileFilter(filtro);
        jfc.setSelectedFile(new File(Nombre + "." + Extension));
        int seleccion = jfc.showSaveDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            AdministracionDiagramaDeFlujo ad = new AdministracionDiagramaDeFlujo(jfc.getSelectedFile().getPath());
            ad.CargarArchivo();
            ArrayList<JLabel> x = new ArrayList();
            ad.setComponentes(x);
            //Este arreglo toma los componentes del panel donde se ponen las clases.
            Object Componentes[] = jpBase.getComponents();
            System.out.println("Los componentes que se guardarÃ¡n son:");
            for (int i = 0; i < Componentes.length; i++) {
                if (Componentes[i] instanceof JLabel) {
                    if (((JLabel) componentes.get(i)).getDisplayedMnemonic() == 2) {
                        String y = "Âª";
                        for (int l = 0; l < variables.size(); l++) {
                            if (l == variables.size() - 1) {
                                y += variables.get(l);
                            } else {
                                y += variables.get(l) + ",";
                            }
                        }
                        ((JLabel) componentes.get(i)).setName(((JLabel) componentes.get(i)).getName() + y);
                        System.out.println(((JLabel) componentes.get(i)).getName());
                    }
                    System.out.println(((JLabel) Componentes[i]).getText());
                    ad.AgregarComponente((JLabel) Componentes[i]);
                }
            }
            try {
                ad.EscribirArchivo();
            } catch (IOException ex) {
                Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "Diagrama de Flujo guardado correctamente.", "Guardado", 1);
        }
    }

    public void AbrirDiagramaDeFlujo() {
        try {
            JFileChooser jfc = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Diagrama de Flujo", "DDF");
            jfc.addChoosableFileFilter(filtro);
            int seleccion = jfc.showOpenDialog(this);
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                String Path = jfc.getSelectedFile().getPath();
                //Esto reinicia la base donde se colocan los compoentes y el arraylist de componetes
                componentes = new ArrayList();
                jpBase.removeAll();
                jpBase.repaint();
                variables = new ArrayList();
                AdministracionDiagramaDeFlujo ap = new AdministracionDiagramaDeFlujo(Path);
                ap.CargarArchivo();
                System.out.println("Componentes Abiertos");
                for (int i = 0; i < ap.getComponentes().size(); i++) {
                    JLabel objeto = ((JLabel) ap.getComponentes().get(i));
                    this.jpBase.add(objeto);
                    jpBase.repaint();
                    objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                        public void mouseDragged(java.awt.event.MouseEvent evt) {
                            actual = objeto;
                            txSeleccionado.setText(objeto.getText());
                            if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 770)) {
                                    if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                            objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                                    objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                                        }
                                    }
                                }
                            }
                        }
                    });
                    objeto.addMouseListener(new MouseListener() {
                        public void mouseClicked(MouseEvent evt) {
                            actual = objeto;
                            txSeleccionado.setText(objeto.getText());
                            mDiseno.setEnabled(true);
                            mEdiciontx.setEnabled(true);
                            if (objeto.getDisplayedMnemonic() == 1 || objeto.getDisplayedMnemonic() == 7 || objeto.getDisplayedMnemonic() == 8) {
                                jmiAgregar.setVisible(false);
                                jmiVerPropiedades.setVisible(false);
                                jbAPropiedades.setEnabled(false);
                                jbVerP.setEnabled(false);
                            } else {
                                jmiAgregar.setVisible(true);
                                jmiVerPropiedades.setVisible(true);
                                jbAPropiedades.setEnabled(true);
                                jbVerP.setEnabled(true);
                            }
                            if (evt.isMetaDown()) {
                                copiaro = objeto;
                                ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                            }
                        }

                        public void mouseEntered(MouseEvent arg0) {
                            objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                            objeto.setToolTipText(objeto.getText());
                        }

                        public void mouseExited(MouseEvent arg0) {
                            objeto.setBorder(null);
                        }

                        public void mousePressed(MouseEvent arg0) {
                            txSeleccionado.setText(objeto.getText());
                            actual = objeto;
                        }

                        public void mouseReleased(MouseEvent arg0) {
                            actual = objeto;
                        }
                    });
                    System.out.println(objeto.getText());
                    //Agregar los Componentes al ArrayList 
                    componentes.add(objeto);
                    if (objeto.getDisplayedMnemonic() == 2) {
                        String[] c = objeto.getName().split("Âª");
                        String[] f = c[1].split(",");
                        DefaultComboBoxModel model = (DefaultComboBoxModel) jcb_variables.getModel();
                        DefaultComboBoxModel model1 = (DefaultComboBoxModel) jcb_variables1.getModel();
                        DefaultComboBoxModel model2 = (DefaultComboBoxModel) jcb_variables2.getModel();
                        DefaultComboBoxModel model3 = (DefaultComboBoxModel) jcb_impresion.getModel();
                        for (int j = 0; j < f.length; j++) {
                            model.addElement(f[j]);
                            model1.addElement(f[j]);
                            model2.addElement(f[j]);
                            model3.addElement(f[j]);
                            variables.add(f[i]);
                        }
                        jcb_variables.setModel(model);
                        jcb_variables1.setModel(model1);
                        jcb_variables2.setModel(model2);
                        jcb_impresion.setModel(model3);
                        jcb_whileV.setModel(model);
                        jcb_whileV1.setModel(model1);
                        jcb_Proceso.setModel(model);
                        jcb_proceso2.setModel(model1);
                        jcb_variableIgual.setModel(model3);
                    }
                }
                if (jpBase.getComponents().length != 0) {
                    JOptionPane.showMessageDialog(this, "Archivo cargado correctamente.", "Cargar", 1);
                } else {
                    JOptionPane.showMessageDialog(this, "Archivo no compatible.", "Error Cargar", 0);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void VerPropiedadesDiagramaDeFlujo() {
        if (actual.getDisplayedMnemonic() == 2) {
            String variables = "";
            if (actual.getName().length() < 2) {
                variables = "No tiene propiedades todavÃ­a.";
            } else if (actual.getName().contains("Âª")) {
                variables = "";
                String h[] = actual.getName().split("Âª")[0].split(";");
                for (int i = 0; i < h.length; i++) {
                    variables += h[i] + ";\n";
                }
            } else {
                String[] v = actual.getName().split(";");
                for (int i = 0; i < v.length; i++) {
                    variables += v[i] + ";\n";
                }
            }
            JOptionPane.showMessageDialog(this, variables, "Propiedades Datos", 1);
        } else if (actual.getDisplayedMnemonic() == 4) {
            String v = actual.getName();
            if (v.length() < 2) {
                v = "No tiene propiedades todavÃ­a.";
            }
            JOptionPane.showMessageDialog(this, v, "Propiedades DesiciÃ³n", 1);
        } else if (actual.getDisplayedMnemonic() == 6) {
            String c = actual.getName();
            if (c.length() < 2) {
                c = "No tiene propiedades todavÃ­a.";
            }
            JOptionPane.showMessageDialog(this, c, "Propiedades ImpresiÃ³n", 1);
        } else if (actual.getDisplayedMnemonic() == 5) {
            String c = actual.getName();
            JOptionPane.showMessageDialog(this, c, "Propiedades While", 1);
        } else if (actual.getDisplayedMnemonic() == 3) {
            String c = actual.getName();
            JOptionPane.showMessageDialog(this, c, "Propiedades Proceso", 1);
        }

    }

    public void AgregarPropiedadesDiagramaDeFlujo() {
        if (actual.getDisplayedMnemonic() == 2) {
            txNombreVariable.setText("â€ƒ");
            jdAgregarVariable.setModal(true);
            jdAgregarVariable.pack();
            jdAgregarVariable.setLocationRelativeTo(this);
            jdAgregarVariable.setVisible(true);
        } else if (actual.getDisplayedMnemonic() == 3) {
            jdProceso.setModal(true);
            jdProceso.pack();
            jdProceso.setLocationRelativeTo(this);
            jdProceso.setVisible(true);
        } else if (actual.getDisplayedMnemonic() == 4) {
            jd_desicion.setModal(true);
            jd_desicion.pack();
            jd_desicion.setLocationRelativeTo(this);
            jd_desicion.setVisible(true);
        } else if (actual.getDisplayedMnemonic() == 5) {
            txtWhile.setText("");
            jdWhile.setModal(true);
            jdWhile.pack();
            jdWhile.setLocationRelativeTo(this);
            jdWhile.setVisible(true);
        } else if (actual.getDisplayedMnemonic() == 6) {
            jdImpresion.setModal(true);
            jdImpresion.pack();
            jdImpresion.setLocationRelativeTo(this);
            jdImpresion.setVisible(true);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel OPA;
    private javax.swing.JLabel OPV;
    private javax.swing.JLabel OPV1;
    private javax.swing.JLabel OPV2;
    private javax.swing.JPanel PanelClase;
    private javax.swing.JPanel PanelFlujo;
    private javax.swing.JButton btClase;
    private javax.swing.JButton btDatos;
    private javax.swing.JButton btDesicion;
    private javax.swing.JButton btImpresion;
    private javax.swing.JButton btInicio;
    private javax.swing.JButton btNuevoDiagramaDeFlujo;
    private javax.swing.JButton btProceso;
    private javax.swing.JButton btSeparador;
    private javax.swing.JButton btSeparador1;
    private javax.swing.JButton btSeparadorV;
    private javax.swing.JButton btSeparadorV1;
    private javax.swing.JButton btWhile;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbAPropiedades;
    private javax.swing.JButton jbAgregarMetodo;
    private javax.swing.JButton jbAgregarParametro;
    private javax.swing.JButton jbAgregarVariableAImpresion;
    private javax.swing.JButton jbAnd;
    private javax.swing.JButton jbAtributo;
    private javax.swing.JButton jbColorClase;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbFuenteClase;
    private javax.swing.JButton jbGuardarCodigo;
    private javax.swing.JButton jbGuardarIf;
    private javax.swing.JButton jbGuardarImpresion;
    private javax.swing.JButton jbGuardarImpresion1;
    private javax.swing.JButton jbGuardarImpresion2;
    private javax.swing.JButton jbHerencia;
    private javax.swing.JButton jbMetodo;
    private javax.swing.JButton jbOr;
    private javax.swing.JButton jbSetTexto;
    private javax.swing.JButton jbVerAtributo;
    private javax.swing.JButton jbVerMetodos;
    private javax.swing.JButton jbVerP;
    private javax.swing.JButton jbtDiagramaClases;
    private javax.swing.JComboBox<String> jcEncapsulamiento;
    private javax.swing.JComboBox<String> jcHijo;
    private javax.swing.JComboBox<String> jcParametros;
    private javax.swing.JComboBox<String> jcTipoAtributo;
    private javax.swing.JComboBox<String> jcTipoMetodo;
    private javax.swing.JComboBox<String> jcTipoParametro;
    private javax.swing.JComboBox<String> jcTipoVariable;
    private javax.swing.JComboBox<String> jcbRelacion;
    private javax.swing.JComboBox<String> jcbRelacionWhile;
    private javax.swing.JComboBox<String> jcb_Proceso;
    private javax.swing.JComboBox<String> jcb_impresion;
    private javax.swing.JComboBox<String> jcb_operacion;
    private javax.swing.JComboBox<String> jcb_proceso2;
    private javax.swing.JComboBox<String> jcb_variableIgual;
    private javax.swing.JComboBox<String> jcb_variables;
    private javax.swing.JComboBox<String> jcb_variables1;
    private javax.swing.JComboBox<String> jcb_variables2;
    private javax.swing.JComboBox<String> jcb_while2;
    private javax.swing.JComboBox<String> jcb_whileV;
    private javax.swing.JComboBox<String> jcb_whileV1;
    private javax.swing.JComboBox<String> jcpadre;
    private javax.swing.JDialog jdAgregarAtributo;
    private javax.swing.JDialog jdAgregarMetodo;
    private javax.swing.JDialog jdAgregarVariable;
    private javax.swing.JDialog jdCodigo;
    private javax.swing.JDialog jdHerencia;
    private javax.swing.JDialog jdImpresion;
    private javax.swing.JDialog jdNuevo;
    private javax.swing.JDialog jdParametro;
    private javax.swing.JDialog jdProceso;
    private javax.swing.JDialog jdWhile;
    private javax.swing.JDialog jd_desicion;
    private javax.swing.JLabel jlbwhile;
    private javax.swing.JMenu jmPropiedades;
    private javax.swing.JMenuItem jmiAbrir;
    private javax.swing.JMenuItem jmiAcercaDe;
    private javax.swing.JMenuItem jmiAgregar;
    private javax.swing.JMenuItem jmiAgregarVariable;
    private javax.swing.JMenuItem jmiAtributos;
    private javax.swing.JMenuItem jmiCambiarColor;
    private javax.swing.JMenuItem jmiCambiarFuente;
    private javax.swing.JMenuItem jmiCambiarTexto;
    private javax.swing.JMenuItem jmiCodigo;
    private javax.swing.JMenuItem jmiColorClase;
    private javax.swing.JMenuItem jmiColorTexto;
    private javax.swing.JMenuItem jmiCopiar;
    private javax.swing.JMenuItem jmiCopiar1;
    private javax.swing.JMenuItem jmiEliminarArbol;
    private javax.swing.JMenuItem jmiEliminarNodo;
    private javax.swing.JMenuItem jmiFuente;
    private javax.swing.JMenuItem jmiGuardar;
    private javax.swing.JMenuItem jmiGuardarComo;
    private javax.swing.JMenuItem jmiImprimir;
    private javax.swing.JMenuItem jmiMetodos;
    private javax.swing.JMenuItem jmiNuevo;
    private javax.swing.JMenuItem jmiPegar;
    private javax.swing.JButton jmiPropiedades1;
    private javax.swing.JMenuItem jmiVerPropiedades;
    private javax.swing.JPanel jpBase;
    private javax.swing.JPanel jpBase0;
    private javax.swing.JPanel jpDiseno;
    private javax.swing.JPanel jpPropiedadesClase;
    private javax.swing.JPanel jpTexto;
    private javax.swing.JPanel jpVariable;
    private javax.swing.JPopupMenu jppPegar;
    private javax.swing.JLabel lbFondo;
    private javax.swing.JMenu mArchivo;
    private javax.swing.JMenu mDiseno;
    private javax.swing.JMenu mEdiciontx;
    private javax.swing.JMenuBar mbPrincipal;
    private javax.swing.JMenuItem miEliminar;
    private javax.swing.JPopupMenu ppImpresion;
    private javax.swing.JPopupMenu ppMenu;
    private javax.swing.JPopupMenu ppMenuClases;
    private javax.swing.JSpinner sptamanio;
    private javax.swing.JSpinner stamanioclase;
    private javax.swing.JTextArea taCodigo;
    private javax.swing.JTextArea ta_impresion;
    private javax.swing.JTextArea txConfiguracion;
    private javax.swing.JTextField txNombreAtributo;
    private javax.swing.JTextField txNombreMetodo;
    private javax.swing.JTextField txNombreParametro;
    private javax.swing.JTextField txNombreVariable;
    private javax.swing.JTextField txSeleccionado;
    private javax.swing.JTextField txSeleccionado1;
    private javax.swing.JLabel txtConfiguracion;
    private javax.swing.JTextField txtIf;
    private javax.swing.JTextField txtOperacion;
    private javax.swing.JTextField txtWhile;
    // End of variables declaration//GEN-END:variables
//    TIPOS:
//    1-inicio listo
//    2-datos listo
//    3-proceso 
//    4-desicion listo
//    5-while   listo
//    6-impresion listo
    Color color;
    String fuente = "Tahoma";
    String fuenteclase = "Tahoma";
    JLabel actual = null;
    JLabel copiaro = null;
    JTree actualT = null;
    JTree copiart = null;
    DefaultMutableTreeNode nodoS;
    int tree = 0;
    int ctabla = 0;
    int proceso = 0;
    int inicio = 0;
    int whiles = 0;
    int separador = 0;
    int separadorVertical = 0;
    int datos = 0;
    int impresion = 0;
    int desicion = 0;
    int X;
    int Y;
    int copiar = 0;
    int copia = 0;
    ArrayList nombresdeclase = new ArrayList();
    ArrayList<JTree> clases = new ArrayList();
    ArrayList<JLabel> componentes = new ArrayList();
    int centinela;
    String parametros = " ";
    String herencia = "";
    String Operacion = "";
    int clasehija = -1;
    ArrayList<String> variables = new ArrayList();
    int op = 0;
}
