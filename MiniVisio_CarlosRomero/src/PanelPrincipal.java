
import com.sun.xml.internal.bind.v2.schemagen.episode.Klass;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Will
 */
public class PanelPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form PanelPrincipal
     */
    public PanelPrincipal() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        this.getContentPane().setBackground(Color.BLACK);
        jpBase0.setVisible(false);
        jpDiseno.setVisible(false);
        jpTexto.setVisible(false);
        mEdiciontx.setVisible(false);
        mDiseno.setVisible(false);
        txConfiguracion.setEditable(false);
        txConfiguracion.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ppMenu = new javax.swing.JPopupMenu();
        miEliminar = new javax.swing.JMenuItem();
        jmiCambiarTexto = new javax.swing.JMenuItem();
        jmiCambiarColor = new javax.swing.JMenuItem();
        jmiColorTexto = new javax.swing.JMenuItem();
        jmiCambiarFuente = new javax.swing.JMenuItem();
        jdNuevo = new javax.swing.JDialog();
        btNuevoDiagramaDeFlujo = new javax.swing.JButton();
        jbtDiagramaClases = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ppMenuClases = new javax.swing.JPopupMenu();
        jmiEliminarArbol = new javax.swing.JMenuItem();
        jmiMetodos = new javax.swing.JMenuItem();
        jmiAtributos = new javax.swing.JMenuItem();
        jdCodigo = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        taCodigo = new javax.swing.JTextArea();
        jbGuardarCodigo = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jdAgregarAtributo = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jcEncapsulamiento = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jcTipoAtributo = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txNombreAtributo = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jdAgregarMetodo = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jcEncapsulamientoMetodo = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        jcTipoMetodo = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txNombreMetodo = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jpTexto = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jbSetTexto = new javax.swing.JButton();
        jBTamanio = new javax.swing.JButton();
        sptamanio = new javax.swing.JSpinner();
        jpDiseno = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jmiPropiedades = new javax.swing.JButton();
        jpBase0 = new javax.swing.JPanel();
        PanelClase = new javax.swing.JPanel();
        txtConfiguracion = new javax.swing.JLabel();
        txSeleccionado1 = new javax.swing.JTextField();
        btSeparador1 = new javax.swing.JButton();
        btSeparadorV1 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        btClase = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txConfiguracion = new javax.swing.JTextArea();
        jLabel21 = new javax.swing.JLabel();
        PanelFlujo = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        btProceso = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btInicio = new javax.swing.JButton();
        btSubproceso = new javax.swing.JButton();
        btDatos = new javax.swing.JButton();
        btSeparador = new javax.swing.JButton();
        btDesicion = new javax.swing.JButton();
        btSeparadorV = new javax.swing.JButton();
        btDocumento = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txSeleccionado = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jpBase = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbFondo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mbPrincipal = new javax.swing.JMenuBar();
        mArchivo = new javax.swing.JMenu();
        jmiNuevo = new javax.swing.JMenuItem();
        jmiAbrir = new javax.swing.JMenuItem();
        jmiGuardar = new javax.swing.JMenuItem();
        jmiGuardarComo = new javax.swing.JMenuItem();
        jmiCodigo = new javax.swing.JMenuItem();
        jmiAcercaDe = new javax.swing.JMenuItem();
        mEdiciontx = new javax.swing.JMenu();
        mDiseno = new javax.swing.JMenu();

        miEliminar.setText("Eliminar");
        miEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEliminarActionPerformed(evt);
            }
        });
        ppMenu.add(miEliminar);

        jmiCambiarTexto.setText("Cambiar Texto");
        jmiCambiarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCambiarTextoActionPerformed(evt);
            }
        });
        ppMenu.add(jmiCambiarTexto);

        jmiCambiarColor.setText("Cambiar Color del Componente");
        jmiCambiarColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCambiarColorActionPerformed(evt);
            }
        });
        ppMenu.add(jmiCambiarColor);

        jmiColorTexto.setText("Cambiar Color de Texto");
        jmiColorTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiColorTextoActionPerformed(evt);
            }
        });
        ppMenu.add(jmiColorTexto);

        jmiCambiarFuente.setText("Cambiar Fuente de Texto");
        jmiCambiarFuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCambiarFuenteActionPerformed(evt);
            }
        });
        ppMenu.add(jmiCambiarFuente);

        jdNuevo.setTitle("Nuevo");
        jdNuevo.setBackground(new java.awt.Color(0, 0, 102));
        jdNuevo.setMinimumSize(new java.awt.Dimension(600, 400));
        jdNuevo.getContentPane().setLayout(null);

        btNuevoDiagramaDeFlujo.setBackground(new java.awt.Color(255, 255, 255));
        btNuevoDiagramaDeFlujo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/DiagramaDeFlujo.png"))); // NOI18N
        btNuevoDiagramaDeFlujo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btNuevoDiagramaDeFlujo.setMaximumSize(new java.awt.Dimension(153, 153));
        btNuevoDiagramaDeFlujo.setMinimumSize(new java.awt.Dimension(153, 153));
        btNuevoDiagramaDeFlujo.setPreferredSize(new java.awt.Dimension(153, 153));
        btNuevoDiagramaDeFlujo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btNuevoDiagramaDeFlujoMouseClicked(evt);
            }
        });
        jdNuevo.getContentPane().add(btNuevoDiagramaDeFlujo);
        btNuevoDiagramaDeFlujo.setBounds(50, 130, 170, 160);

        jbtDiagramaClases.setBackground(new java.awt.Color(255, 255, 255));
        jbtDiagramaClases.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Diagrama de Clases.png"))); // NOI18N
        jbtDiagramaClases.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtDiagramaClases.setMaximumSize(new java.awt.Dimension(153, 153));
        jbtDiagramaClases.setMinimumSize(new java.awt.Dimension(153, 153));
        jbtDiagramaClases.setPreferredSize(new java.awt.Dimension(153, 153));
        jbtDiagramaClases.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtDiagramaClasesMouseClicked(evt);
            }
        });
        jdNuevo.getContentPane().add(jbtDiagramaClases);
        jbtDiagramaClases.setBounds(350, 130, 170, 160);

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Diagrama de Clases");
        jdNuevo.getContentPane().add(jLabel4);
        jLabel4.setBounds(350, 110, 170, 20);

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Diagrama de Flujo");
        jdNuevo.getContentPane().add(jLabel5);
        jLabel5.setBounds(50, 110, 170, 20);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo.PNG"))); // NOI18N
        jLabel3.setToolTipText("Mini Visio Carlos Romero");
        jLabel3.setFocusable(false);
        jdNuevo.getContentPane().add(jLabel3);
        jLabel3.setBounds(230, 10, 136, 71);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jmiEliminarArbol.setText("Eliminar Componente");
        jmiEliminarArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEliminarArbolActionPerformed(evt);
            }
        });
        ppMenuClases.add(jmiEliminarArbol);

        jmiMetodos.setText("Agregar Métodos");
        jmiMetodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMetodosActionPerformed(evt);
            }
        });
        ppMenuClases.add(jmiMetodos);

        jmiAtributos.setText("Agregar Atributos");
        jmiAtributos.setActionCommand("");
        jmiAtributos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAtributosActionPerformed(evt);
            }
        });
        ppMenuClases.add(jmiAtributos);

        jdCodigo.setTitle("Código");
        jdCodigo.setMinimumSize(new java.awt.Dimension(600, 500));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setMaximumSize(new java.awt.Dimension(600, 500));
        jPanel1.setMinimumSize(new java.awt.Dimension(600, 500));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 500));

        taCodigo.setEditable(false);
        taCodigo.setColumns(20);
        taCodigo.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        taCodigo.setRows(5);
        jScrollPane3.setViewportView(taCodigo);

        jbGuardarCodigo.setBackground(new java.awt.Color(0, 51, 51));
        jbGuardarCodigo.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jbGuardarCodigo.setForeground(new java.awt.Color(102, 255, 204));
        jbGuardarCodigo.setText("Guardar Código");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 204, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Código Generado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 38, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jbGuardarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbGuardarCodigo)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jdCodigoLayout = new javax.swing.GroupLayout(jdCodigo.getContentPane());
        jdCodigo.getContentPane().setLayout(jdCodigoLayout);
        jdCodigoLayout.setHorizontalGroup(
            jdCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdCodigoLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );
        jdCodigoLayout.setVerticalGroup(
            jdCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdCodigoLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jdAgregarAtributo.setTitle("Atributo");
        jdAgregarAtributo.setBackground(new java.awt.Color(204, 204, 255));
        jdAgregarAtributo.setMaximumSize(new java.awt.Dimension(300, 300));
        jdAgregarAtributo.setMinimumSize(new java.awt.Dimension(300, 300));
        jdAgregarAtributo.setSize(new java.awt.Dimension(300, 300));
        jdAgregarAtributo.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcEncapsulamiento.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jcEncapsulamiento.setForeground(new java.awt.Color(51, 0, 51));
        jcEncapsulamiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "private", "public", "protected" }));
        jPanel2.add(jcEncapsulamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 162, 20));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Nombre de Método:");
        jPanel2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 130, 20));

        jcTipoAtributo.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jcTipoAtributo.setForeground(new java.awt.Color(51, 0, 51));
        jcTipoAtributo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "int", "long", "float", "double", "bool", "char", "wchar_t" }));
        jPanel2.add(jcTipoAtributo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 162, 20));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Atributos");
        jPanel2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 114, 20));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Encapsulamiento:");
        jPanel2.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 114, 20));
        jPanel2.add(txNombreAtributo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 260, -1));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Tipo de Atributo:");
        jPanel2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 114, 20));

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 0, 51));
        jButton2.setText("Agregar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, -1, -1));

        jdAgregarAtributo.getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 300));

        jdAgregarMetodo.setTitle("Método");
        jdAgregarMetodo.setBackground(new java.awt.Color(204, 204, 255));
        jdAgregarMetodo.setMaximumSize(new java.awt.Dimension(300, 300));
        jdAgregarMetodo.setSize(new java.awt.Dimension(300, 300));
        jdAgregarMetodo.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(51, 0, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcEncapsulamientoMetodo.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jcEncapsulamientoMetodo.setForeground(new java.awt.Color(51, 0, 51));
        jcEncapsulamientoMetodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "private", "public", "protected" }));
        jPanel3.add(jcEncapsulamientoMetodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 162, 20));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Nombre de Método:");
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 130, 20));

        jcTipoMetodo.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jcTipoMetodo.setForeground(new java.awt.Color(51, 0, 51));
        jcTipoMetodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "void", "int", "long", "float", "double", "bool", "char", "wchar_t" }));
        jPanel3.add(jcTipoMetodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 162, 20));

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Métodos");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 114, 20));

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Encapsulamiento");
        jPanel3.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 114, 20));
        jPanel3.add(txNombreMetodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 260, -1));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Tipo de Método");
        jPanel3.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 114, 20));

        jButton4.setBackground(new java.awt.Color(204, 204, 255));
        jButton4.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(51, 0, 51));
        jButton4.setText("Agregar");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jPanel3.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, -1, -1));

        jdAgregarMetodo.getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 300));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MiniVisio - Carlos Wilfredo Romero Maradiaga");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpTexto.setBackground(new java.awt.Color(0, 102, 102));
        jpTexto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jpTexto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton3.setBackground(new java.awt.Color(0, 51, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 204, 102));
        jButton3.setText("Cambiar Color de Texto");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jpTexto.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 170, 40));

        jButton5.setBackground(new java.awt.Color(153, 153, 255));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 204, 153));
        jButton5.setText("Cambiar Fuente de Texto");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jpTexto.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, 170, 40));

        jbSetTexto.setBackground(new java.awt.Color(153, 255, 153));
        jbSetTexto.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbSetTexto.setForeground(new java.awt.Color(102, 0, 0));
        jbSetTexto.setText("Cambiar Texto");
        jbSetTexto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbSetTextoMouseClicked(evt);
            }
        });
        jpTexto.add(jbSetTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 170, 40));

        jBTamanio.setBackground(new java.awt.Color(0, 51, 102));
        jBTamanio.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBTamanio.setForeground(new java.awt.Color(0, 204, 204));
        jBTamanio.setText("Cambiar Tamaño de Texto");
        jBTamanio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBTamanioMouseClicked(evt);
            }
        });
        jpTexto.add(jBTamanio, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 20, 180, 40));

        sptamanio.setModel(new javax.swing.SpinnerNumberModel(11, 3, 36, 1));
        sptamanio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sptamanioStateChanged(evt);
            }
        });
        jpTexto.add(sptamanio, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, 60, 40));

        getContentPane().add(jpTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 950, 70));

        jpDiseno.setBackground(new java.awt.Color(0, 102, 102));
        jpDiseno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jpDiseno.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(153, 153, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 204, 153));
        jButton1.setText("Color de Componente");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jpDiseno.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 170, 40));

        jbEliminar.setBackground(new java.awt.Color(153, 255, 153));
        jbEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbEliminar.setForeground(new java.awt.Color(102, 0, 0));
        jbEliminar.setText("Eliminar Componente");
        jbEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbEliminarMouseClicked(evt);
            }
        });
        jpDiseno.add(jbEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 170, 40));

        jmiPropiedades.setText("Propiedades");
        jpDiseno.add(jmiPropiedades, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 170, 40));

        getContentPane().add(jpDiseno, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 950, 70));

        jpBase0.setBackground(new java.awt.Color(153, 153, 153));
        jpBase0.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelClase.setBackground(new java.awt.Color(204, 255, 204));

        txtConfiguracion.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        txtConfiguracion.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        txSeleccionado1.setBackground(new java.awt.Color(0, 0, 0));
        txSeleccionado1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txSeleccionado1.setForeground(new java.awt.Color(0, 255, 102));

        btSeparador1.setBackground(new java.awt.Color(255, 153, 102));
        btSeparador1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/8.png"))); // NOI18N
        btSeparador1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSeparador1MouseClicked(evt);
            }
        });

        btSeparadorV1.setBackground(new java.awt.Color(255, 255, 153));
        btSeparadorV1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/9.png"))); // NOI18N
        btSeparadorV1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSeparadorV1MouseClicked(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel17.setText("Separador Vertical");

        jLabel18.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel18.setText("Separador");

        jLabel19.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel19.setText("Formas para Diagramas de Clases:");

        btClase.setBackground(new java.awt.Color(0, 204, 204));
        btClase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Clase.jpg"))); // NOI18N
        btClase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btClaseMouseClicked(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel20.setText("Clase");

        txConfiguracion.setEditable(false);
        txConfiguracion.setColumns(20);
        txConfiguracion.setFont(new java.awt.Font("Monospaced", 1, 15)); // NOI18N
        txConfiguracion.setRows(5);
        txConfiguracion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txConfiguracionMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(txConfiguracion);

        jLabel21.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel21.setText("Clase Seleccionada:");
        jLabel21.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout PanelClaseLayout = new javax.swing.GroupLayout(PanelClase);
        PanelClase.setLayout(PanelClaseLayout);
        PanelClaseLayout.setHorizontalGroup(
            PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btClase, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelClaseLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(24, 24, 24))
            .addGroup(PanelClaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txSeleccionado1)
                    .addGroup(PanelClaseLayout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jLabel20)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(PanelClaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(PanelClaseLayout.createSequentialGroup()
                .addGroup(PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelClaseLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel19))
                    .addGroup(PanelClaseLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtConfiguracion, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(PanelClaseLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelClaseLayout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PanelClaseLayout.createSequentialGroup()
                        .addComponent(btSeparador1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addComponent(btSeparadorV1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        PanelClaseLayout.setVerticalGroup(
            PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelClaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btClase, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btSeparadorV1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSeparador1, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelClaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txSeleccionado1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(txtConfiguracion, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jpBase0.add(PanelClase, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 380, 640));

        PanelFlujo.setBackground(new java.awt.Color(204, 204, 255));
        PanelFlujo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel6.setText("Formas para Diagramas de Flujo:");

        btProceso.setBackground(new java.awt.Color(153, 153, 255));
        btProceso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/5.png"))); // NOI18N
        btProceso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btProcesoMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel7.setText("Proceso");

        jLabel8.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel8.setText("Inicio o Finalización ");

        jLabel9.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel9.setText("Datos");

        jLabel10.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel10.setText("Subproceso");

        jLabel11.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel11.setText("Desición");

        jLabel12.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel12.setText("Documento");

        jLabel13.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel13.setText("Separador");

        btInicio.setBackground(new java.awt.Color(204, 255, 204));
        btInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/1.png"))); // NOI18N
        btInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btInicioMouseClicked(evt);
            }
        });

        btSubproceso.setBackground(new java.awt.Color(255, 153, 255));
        btSubproceso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/6.png"))); // NOI18N
        btSubproceso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSubprocesoMouseClicked(evt);
            }
        });

        btDatos.setBackground(new java.awt.Color(0, 153, 153));
        btDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/2.png"))); // NOI18N
        btDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btDatosMouseClicked(evt);
            }
        });

        btSeparador.setBackground(new java.awt.Color(255, 153, 102));
        btSeparador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/8.png"))); // NOI18N
        btSeparador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSeparadorMouseClicked(evt);
            }
        });

        btDesicion.setBackground(new java.awt.Color(255, 153, 153));
        btDesicion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/3.png"))); // NOI18N
        btDesicion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btDesicionMouseClicked(evt);
            }
        });

        btSeparadorV.setBackground(new java.awt.Color(255, 255, 153));
        btSeparadorV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/9.png"))); // NOI18N
        btSeparadorV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSeparadorVMouseClicked(evt);
            }
        });

        btDocumento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ComponentesDiagramaUML/4.png"))); // NOI18N
        btDocumento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btDocumentoMouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel14.setText("Separador Vertical");

        txSeleccionado.setBackground(new java.awt.Color(0, 0, 0));
        txSeleccionado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txSeleccionado.setForeground(new java.awt.Color(0, 255, 102));

        jLabel15.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel15.setText("Objeto Seleccionado:");
        jLabel15.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout PanelFlujoLayout = new javax.swing.GroupLayout(PanelFlujo);
        PanelFlujo.setLayout(PanelFlujoLayout);
        PanelFlujoLayout.setHorizontalGroup(
            PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFlujoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelFlujoLayout.createSequentialGroup()
                        .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelFlujoLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFlujoLayout.createSequentialGroup()
                                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btSubproceso, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(btInicio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btDatos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(btSeparador, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                    .addGroup(PanelFlujoLayout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(jLabel13)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelFlujoLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel14))
                                    .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btSeparadorV, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(btProceso, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btDesicion, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(btDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                        .addContainerGap())
                    .addGroup(PanelFlujoLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(49, 49, 49))))
            .addGroup(PanelFlujoLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(50, 50, 50))
            .addGroup(PanelFlujoLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(47, 47, 47))
            .addGroup(PanelFlujoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txSeleccionado)
                .addContainerGap())
            .addGroup(PanelFlujoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelFlujoLayout.setVerticalGroup(
            PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFlujoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btDesicion)
                    .addComponent(btDatos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelFlujoLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelFlujoLayout.createSequentialGroup()
                                .addComponent(btDocumento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btSeparadorV, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelFlujoLayout.createSequentialGroup()
                                .addComponent(btSubproceso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btSeparador))))
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelFlujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addGap(3, 3, 3)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpBase0.add(PanelFlujo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jpBase.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 102, 102)));
        jpBase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpBaseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpBaseLayout = new javax.swing.GroupLayout(jpBase);
        jpBase.setLayout(jpBaseLayout);
        jpBaseLayout.setHorizontalGroup(
            jpBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 908, Short.MAX_VALUE)
        );
        jpBaseLayout.setVerticalGroup(
            jpBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 638, Short.MAX_VALUE)
        );

        jpBase0.add(jpBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 11, 910, 640));

        getContentPane().add(jpBase0, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 1320, 660));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo1.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, -1, -1));

        lbFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoPrincipal.png"))); // NOI18N
        getContentPane().add(lbFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 550));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo.PNG"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 570, -1, -1));

        mbPrincipal.setBackground(new java.awt.Color(51, 102, 255));
        mbPrincipal.setForeground(new java.awt.Color(51, 102, 255));
        mbPrincipal.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N

        mArchivo.setForeground(new java.awt.Color(255, 102, 102));
        mArchivo.setText("Archivo");
        mArchivo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mArchivoActionPerformed(evt);
            }
        });

        jmiNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jmiNuevo.setText("Nuevo");
        jmiNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNuevoActionPerformed(evt);
            }
        });
        mArchivo.add(jmiNuevo);

        jmiAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jmiAbrir.setText("Abrir");
        mArchivo.add(jmiAbrir);

        jmiGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jmiGuardar.setText("Guardar");
        mArchivo.add(jmiGuardar);

        jmiGuardarComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_MASK));
        jmiGuardarComo.setText("Guardar como");
        mArchivo.add(jmiGuardarComo);

        jmiCodigo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jmiCodigo.setText("Generar Código C++");
        jmiCodigo.setEnabled(false);
        jmiCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCodigoActionPerformed(evt);
            }
        });
        mArchivo.add(jmiCodigo);

        jmiAcercaDe.setText("Acerca De");
        mArchivo.add(jmiAcercaDe);

        mbPrincipal.add(mArchivo);

        mEdiciontx.setBackground(new java.awt.Color(102, 153, 255));
        mEdiciontx.setForeground(new java.awt.Color(153, 153, 255));
        mEdiciontx.setText("Edición de Texto ");
        mEdiciontx.setEnabled(false);
        mEdiciontx.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mEdiciontx.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mEdiciontxMouseClicked(evt);
            }
        });
        mbPrincipal.add(mEdiciontx);

        mDiseno.setForeground(new java.awt.Color(102, 255, 204));
        mDiseno.setText("Diseño");
        mDiseno.setEnabled(false);
        mDiseno.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mDiseno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mDisenoMouseClicked(evt);
            }
        });
        mDiseno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mDisenoActionPerformed(evt);
            }
        });
        mbPrincipal.add(mDiseno);

        setJMenuBar(mbPrincipal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNuevoActionPerformed
        jdNuevo.getContentPane().setBackground(Color.WHITE);
        jdNuevo.setModal(true);
        jdNuevo.pack();
        jdNuevo.setLocationRelativeTo(this);      
        jdNuevo.setVisible(true);
    }//GEN-LAST:event_jmiNuevoActionPerformed

    private void mArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mArchivoActionPerformed

    private void btNuevoDiagramaDeFlujoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btNuevoDiagramaDeFlujoMouseClicked
        jpBase0.setVisible(true);
        jdNuevo.dispose();
        jpBase.removeAll();
        jpBase.setBackground(Color.WHITE);
        PanelClase.setVisible(false);
        PanelFlujo.setVisible(true);
        mEdiciontx.setVisible(true);
        mDiseno.setVisible(true);
        centinela = 1;
        jmiCodigo.setEnabled(true);
        jmiCodigo.setEnabled(true);
        this.repaint();
    }//GEN-LAST:event_btNuevoDiagramaDeFlujoMouseClicked

    private void btProcesoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btProcesoMouseClicked
        String Nombre = "Proceso";
        String imagen = "/ComponentesDiagramaUML/5.png";
        //Se crea o objeti
        JLabel objeto;
        objeto = new JLabel();
        //Esto es para poder cambiar de color y ponerle ua imagen con fondo trasnparente
        objeto.setOpaque(true);
        //El nmbre de La Variable
        objeto.setName(Nombre + "_" + proceso);
        //Se le pone un Color aleatorio
        objeto.setBackground(ColorAletorio());
        //Es para que el texto esté en el centro del Label
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        //Contador del objeto
        proceso++;
        //Lo añade al panel
        this.jpBase.add(objeto);
        //Pone una posicio  aleatroio deliminatdo por el tamaño del Panel BASE
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        //se genera e la posicion aleatoria
        objeto.setLocation(x, y);
        //Esta es la imagen que se le pone
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        //El texto es el mismo nombre de la variable
        objeto.setText(objeto.getName());
        //Se define el tamaño
        objeto.setSize(135, 90);
        actual = objeto;
        //es para que cada vez que se acerce al objeto, el cursor cambie a una manita
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        //Los eventos para mover el Objeto
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 800)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                if (evt.isMetaDown()) {
                    actual = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                objeto.setToolTipText(objeto.getName());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                txSeleccionado.setText(objeto.getName());
                actual = objeto;
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
    }//GEN-LAST:event_btProcesoMouseClicked

    private void btSeparadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSeparadorMouseClicked
        // TODO add your handling code here:
        String Nombre = "Separador";
        String imagen = "/ComponentesDiagramaUML/8.png";
        JLabel objeto;
        objeto = new JLabel();
        objeto.setOpaque(true);
        objeto.setName(Nombre + "_" + separador);
        objeto.setBackground(ColorAletorio());
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        separador++;
        this.jpBase.add(objeto);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        objeto.setLocation(x, y);
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        objeto.setSize(135, 90);
        actual = objeto;
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 800)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                if (evt.isMetaDown()) {
                    actual = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                objeto.setToolTipText(objeto.getName());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
    }//GEN-LAST:event_btSeparadorMouseClicked

    private void btSeparadorVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSeparadorVMouseClicked
        // TODO add your handling code here:
        String Nombre = "SeparadorVertical";
        String imagen = "/ComponentesDiagramaUML/7.png";
        JLabel objeto;
        objeto = new JLabel();
        objeto.setOpaque(true);
        objeto.setName(Nombre + "_" + separadorVertical);
        objeto.setBackground(ColorAletorio());
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        separadorVertical++;
        this.jpBase.add(objeto);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        objeto.setLocation(x, y);
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        objeto.setSize(135, 90);
        actual = objeto;
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 800)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                if (evt.isMetaDown()) {
                    actual = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                objeto.setToolTipText(objeto.getName());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
    }//GEN-LAST:event_btSeparadorVMouseClicked

    private void miEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEliminarActionPerformed
        EliminarComponente();
    }//GEN-LAST:event_miEliminarActionPerformed

    private void jpBaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBaseMouseClicked
        jpDiseno.setVisible(false);
        mDiseno.setEnabled(false);
        mEdiciontx.setEnabled(false);
        jpTexto.setVisible(false);
        txSeleccionado.setText("");
        txConfiguracion.setText("");
        txtConfiguracion.setText("");
        txConfiguracion.setEditable(false);
        txSeleccionado1.setText("");
        jdAgregarAtributo.setVisible(false);
    }//GEN-LAST:event_jpBaseMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void mDisenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mDisenoActionPerformed

    }//GEN-LAST:event_mDisenoActionPerformed

    private void mDisenoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mDisenoMouseClicked
        if (mDiseno.isEnabled()) {
            jpDiseno.setVisible(true);
            jpTexto.setVisible(false);
        }
    }//GEN-LAST:event_mDisenoMouseClicked

    private void jbtDiagramaClasesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtDiagramaClasesMouseClicked
        jpBase0.setVisible(true);
        jdNuevo.dispose();
        jpBase.setBackground(Color.WHITE);
        PanelFlujo.setVisible(false);
        PanelClase.setVisible(true);
        jpBase.removeAll();
        mDiseno.setVisible(false);
        mEdiciontx.setVisible(false);
        centinela = 2;
        jmiCodigo.setEnabled(true);
        jmiCodigo.setEnabled(true);
        clases = new ArrayList();
        nombresdeclase = new ArrayList();
        this.repaint();
    }//GEN-LAST:event_jbtDiagramaClasesMouseClicked

    private void jmiCambiarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCambiarTextoActionPerformed
        CambiarTexto();
    }//GEN-LAST:event_jmiCambiarTextoActionPerformed

    private void jmiCambiarColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCambiarColorActionPerformed
        CambiarColorComponente();
    }//GEN-LAST:event_jmiCambiarColorActionPerformed

    private void jmiColorTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiColorTextoActionPerformed
        CambiarColorTexto();
    }//GEN-LAST:event_jmiColorTextoActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        CambiarColorComponente();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jbEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbEliminarMouseClicked
        EliminarComponente();
    }//GEN-LAST:event_jbEliminarMouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        CambiarColorTexto();
    }//GEN-LAST:event_jButton3MouseClicked

    private void jbSetTextoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbSetTextoMouseClicked
        CambiarTexto();
    }//GEN-LAST:event_jbSetTextoMouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        CambiarFuente();
    }//GEN-LAST:event_jButton5MouseClicked

    private void mEdiciontxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mEdiciontxMouseClicked
        // TODO add your handling code here:
        if (mDiseno.isEnabled()) {
            jpTexto.setVisible(true);
            jpDiseno.setVisible(false);
        }
    }//GEN-LAST:event_mEdiciontxMouseClicked

    private void jmiCambiarFuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCambiarFuenteActionPerformed
        CambiarFuente();
    }//GEN-LAST:event_jmiCambiarFuenteActionPerformed

    private void jBTamanioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBTamanioMouseClicked
        CambiarTamanio();
    }//GEN-LAST:event_jBTamanioMouseClicked

    private void btInicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btInicioMouseClicked
        String Nombre = "Inicio/Finalizacion";
        String imagen = "/ComponentesDiagramaUML/1.png";
        JLabel objeto;
        objeto = new JLabel();
        objeto.setOpaque(true);
        objeto.setName(Nombre + "_" + inicio);
        objeto.setBackground(ColorAletorio());
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        inicio++;
        this.jpBase.add(objeto);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        objeto.setLocation(x, y);
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        objeto.setText(objeto.getName());
        objeto.setSize(135, 90);
        actual = objeto;
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 800)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                if (evt.isMetaDown()) {
                    actual = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                objeto.setToolTipText(objeto.getName());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
    }//GEN-LAST:event_btInicioMouseClicked

    private void btDocumentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDocumentoMouseClicked
        // TODO add your handling code here:
        String Nombre = "Documento";
        String imagen = "/ComponentesDiagramaUML/4.png";
        JLabel objeto;
        objeto = new JLabel();
        objeto.setOpaque(true);
        objeto.setName(Nombre + "_" + documento);
        objeto.setBackground(ColorAletorio());
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        documento++;
        this.jpBase.add(objeto);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        objeto.setLocation(x, y);
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        objeto.setText(objeto.getName());
        objeto.setSize(135, 90);
        actual = objeto;
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 800)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                if (evt.isMetaDown()) {
                    actual = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                objeto.setToolTipText(objeto.getName());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
    }//GEN-LAST:event_btDocumentoMouseClicked

    private void btSubprocesoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSubprocesoMouseClicked
        // TODO add your handling code here:
        String Nombre = "Subproceso";
        String imagen = "/ComponentesDiagramaUML/6.png";
        JLabel objeto;
        objeto = new JLabel();
        objeto.setOpaque(true);
        objeto.setName(Nombre + "_" + subproceso);
        objeto.setBackground(ColorAletorio());
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        subproceso++;
        this.jpBase.add(objeto);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        objeto.setLocation(x, y);
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        objeto.setText(objeto.getName());
        objeto.setSize(135, 90);
        actual = objeto;
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 800)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                if (evt.isMetaDown()) {
                    actual = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                objeto.setToolTipText(objeto.getName());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
    }//GEN-LAST:event_btSubprocesoMouseClicked

    private void btDesicionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDesicionMouseClicked
        // TODO add your handling code here:
        String Nombre = "Desicion";
        String imagen = "/ComponentesDiagramaUML/3.png";
        JLabel objeto;
        objeto = new JLabel();
        objeto.setOpaque(true);
        objeto.setName(Nombre + "_" + desicion);
        objeto.setBackground(ColorAletorio());
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        desicion++;
        this.jpBase.add(objeto);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        objeto.setLocation(x, y);
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        objeto.setText(objeto.getName());
        objeto.setSize(135, 90);
        actual = objeto;
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 800)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                if (evt.isMetaDown()) {
                    actual = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                objeto.setToolTipText(objeto.getName());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
    }//GEN-LAST:event_btDesicionMouseClicked

    private void btDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDatosMouseClicked
        // TODO add your handling code here:
        String Nombre = "Datos";
        String imagen = "/ComponentesDiagramaUML/2.png";
        JLabel objeto;
        objeto = new JLabel();
        objeto.setOpaque(true);
        objeto.setName(Nombre + "_" + datos);
        objeto.setBackground(ColorAletorio());
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        datos++;
        this.jpBase.add(objeto);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        objeto.setLocation(x, y);
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        objeto.setText(objeto.getName());
        objeto.setSize(135, 90);
        actual = objeto;
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 800)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                if (evt.isMetaDown()) {
                    actual = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
                objeto.setToolTipText(objeto.getName());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                actual = objeto;
                txSeleccionado.setText(objeto.getName());
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
    }//GEN-LAST:event_btDatosMouseClicked

    private void btSeparador1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSeparador1MouseClicked
        // TODO add your handling code here:
        String Nombre = "Separador";
        String imagen = "/ComponentesDiagramaUML/8.png";
        JLabel objeto;
        objeto = new JLabel();
        objeto.setOpaque(true);
        objeto.setName(Nombre + "_" + separador);
        objeto.setBackground(ColorAletorio());
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        separador++;
        this.jpBase.add(objeto);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        objeto.setLocation(x, y);
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        objeto.setSize(135, 90);
        actual = objeto;
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        objeto.setBorder(null);
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado1.setText(objeto.getName());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 800)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                actual = objeto;
                txSeleccionado1.setText(objeto.getName());
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                if (evt.isMetaDown()) {
                    actual = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(254, 146, 0), 2));
                objeto.setToolTipText(objeto.getName());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                actual = objeto;
                txSeleccionado1.setText(objeto.getName());
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
    }//GEN-LAST:event_btSeparador1MouseClicked

    private void btSeparadorV1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSeparadorV1MouseClicked
        // TODO add your handling code here:
        String Nombre = "SeparadorVertical";
        String imagen = "/ComponentesDiagramaUML/7.png";
        JLabel objeto;
        objeto = new JLabel();
        objeto.setOpaque(true);
        objeto.setName(Nombre + "_" + separadorVertical);
        objeto.setBackground(ColorAletorio());
        objeto.setHorizontalTextPosition(SwingConstants.CENTER);
        separadorVertical++;
        this.jpBase.add(objeto);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        objeto.setLocation(x, y);
        objeto.setIcon(new ImageIcon(getClass().getResource(imagen)));
        objeto.setSize(135, 90);
        actual = objeto;
        objeto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        objeto.setBorder(null);
        objeto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actual = objeto;
                txSeleccionado1.setText(objeto.getName());
                if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) > 5)) {
                    if (((objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2) < 800)) {
                        if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) > -15) {
                            if ((objeto.getLocation().y + evt.getY() - objeto.getWidth() / 2) < 520) {
                                objeto.setLocation(objeto.getLocation().x + evt.getX() - objeto.getWidth() / 2,
                                        objeto.getLocation().y + evt.getY() - objeto.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        objeto.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                mDiseno.setEnabled(true);
                mEdiciontx.setEnabled(true);
                actual = objeto;
                txSeleccionado1.setText(objeto.getName());
                if (evt.isMetaDown()) {
                    actual = objeto;
                    ppMenu.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                objeto.setBorder(BorderFactory.createLineBorder(new java.awt.Color(254, 146, 0), 2));
                objeto.setToolTipText(objeto.getName());
            }

            public void mouseExited(MouseEvent arg0) {
                objeto.setBorder(null);
            }

            public void mousePressed(MouseEvent arg0) {
                actual = objeto;
                txSeleccionado1.setText(objeto.getName());
            }

            public void mouseReleased(MouseEvent arg0) {
                actual = objeto;
            }
        });
    }//GEN-LAST:event_btSeparadorV1MouseClicked

    private void btClaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btClaseMouseClicked
        boolean X = false;
        txConfiguracion.setText("");
        String Nombre = "";
        while (X == false) {
            Nombre = JOptionPane.showInputDialog(this, "Ingrese el Nombre de la Clase:", "Clase!", 1);
            int Y = 0;
            for (int i = 0; i < nombresdeclase.size(); i++) {
                if (nombresdeclase.get(i).equals(Nombre)) {
                    Y++;
                }
            }
            if (Y == 0) {
                X = true;
            } else {
                JOptionPane.showMessageDialog(this, "Ese Nombre ya está utilizado!", "Advertencia", 0);
            }
        }
        nombresdeclase.add(Nombre);
        DefaultMutableTreeNode Root = new DefaultMutableTreeNode(Nombre);
        DefaultTreeModel modelo = new DefaultTreeModel(Root);
        JTree arbol = new JTree(modelo);
        DefaultTreeModel m = (DefaultTreeModel) arbol.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
        DefaultMutableTreeNode atributos = new DefaultMutableTreeNode("<Atributos>");
        DefaultMutableTreeNode metodos = new DefaultMutableTreeNode("<Metodos>");
        raiz.add(atributos);
        raiz.add(metodos);
        arbol.setName("Arbol" + tree);
        arbol.setSize(150, 150);
        arbol.setBackground(new java.awt.Color(192, 255, 243));
        arbol.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
        tree++;
        arbol.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        arbol.addMouseListener(new MouseListener() {
            public void mouseClicked(MouseEvent evt) {
                actualT = arbol;
                txSeleccionado1.setText(modelo.getRoot().toString());
                int row = arbol.getClosestRowForLocation(evt.getX(), evt.getY());
                arbol.setSelectionRow(row);
                Object v1 = arbol.getSelectionPath().getLastPathComponent();
                nodoS = (DefaultMutableTreeNode) v1;
                if (evt.isMetaDown()) {
                    ppMenuClases.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }

            public void mouseEntered(MouseEvent arg0) {
                arbol.setBorder(BorderFactory.createLineBorder(new java.awt.Color(254, 146, 0), 2));
                arbol.setToolTipText(modelo.getRoot().toString());
            }

            public void mouseExited(MouseEvent arg0) {
                arbol.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));
            }

            public void mousePressed(MouseEvent arg0) {
                actualT = arbol;
                txSeleccionado1.setText(modelo.getRoot().toString());
            }

            public void mouseReleased(MouseEvent arg0) {
            }
        });
        arbol.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                actualT = arbol;
                txSeleccionado1.setText(modelo.getRoot().toString());
                if (((arbol.getLocation().x + evt.getX() - arbol.getWidth() / 2) > 5)) {
                    if (((arbol.getLocation().x + evt.getX() - arbol.getWidth() / 2) < 800)) {
                        if ((arbol.getLocation().y + evt.getY() - arbol.getWidth() / 2) > -15) {
                            if ((arbol.getLocation().y + evt.getY() - arbol.getWidth() / 2) < 520) {
                                arbol.setLocation(arbol.getLocation().x + evt.getX() - arbol.getWidth() / 2,
                                        arbol.getLocation().y + evt.getY() - arbol.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        this.jpBase.add(arbol);
        int x = (int) Math.floor(Math.random() * 801 + 1);
        int y = (int) Math.floor(Math.random() * 521 + 1);
        arbol.setLocation(x, y);
        clases.add(arbol);
        jpBase.repaint();
    }//GEN-LAST:event_btClaseMouseClicked

    private void jmiEliminarArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEliminarArbolActionPerformed
        jpBase.remove(actualT);
        txSeleccionado1.setText("");
        this.repaint();
    }//GEN-LAST:event_jmiEliminarArbolActionPerformed

    private void jmiMetodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMetodosActionPerformed
        String x = "";
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        for (int i = 0; i < root.getChildCount(); i++) {
            if (root.getChildAt(i).toString().equals("<Metodos>")) {
                for (int j = 0; j < root.getChildAt(i).getChildCount(); j++) {
                    x += "" + (DefaultMutableTreeNode) root.getChildAt(i).getChildAt(j) + "\n";
                }
            }
        }
        txConfiguracion.setText("Métodos de la Clase <<" + model.getRoot() + ">>:\n" + x);
        x = "";
        txConfiguracion.setEnabled(true);
        txtConfiguracion.setText("Métodos:");
        txConfiguracion.setEditable(false);
        jdAgregarMetodo.setModal(true);
        jdAgregarMetodo.pack();
        jdAgregarMetodo.setLocationRelativeTo(this);
        jdAgregarMetodo.setVisible(true);
    }//GEN-LAST:event_jmiMetodosActionPerformed

    private void jmiAtributosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAtributosActionPerformed
        String x = "";
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        for (int i = 0; i < root.getChildCount(); i++) {
            if (root.getChildAt(i).toString().equals("<Atributos>")) {
                for (int j = 0; j < root.getChildAt(i).getChildCount(); j++) {
                    x += "" + (DefaultMutableTreeNode) root.getChildAt(i).getChildAt(j) + "\n";
                }
            }
        }
        txConfiguracion.setText("Atributos de la Clase <<" + model.getRoot() + ">>:\n" + x);
        txConfiguracion.setEnabled(true);
        txtConfiguracion.setText("Atributos:");
        txConfiguracion.setEditable(false);
        x = "";
        jdAgregarAtributo.setModal(true);
        jdAgregarAtributo.pack();
        jdAgregarAtributo.setLocationRelativeTo(this);
        jdAgregarAtributo.setVisible(true);
    }//GEN-LAST:event_jmiAtributosActionPerformed

    private void txConfiguracionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txConfiguracionMouseClicked

    }//GEN-LAST:event_txConfiguracionMouseClicked

    private void jmiCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCodigoActionPerformed
        taCodigo.setText("");
        String c = "";
        try {
            if (centinela == 2) {
                for (int i = 0; i < clases.size(); i++) {
                    CodigoDiagramaDeClases cod = new CodigoDiagramaDeClases((JTree) clases.get(i));
                    cod.Inicio();
                    cod.Atributos();
                    cod.Final();
                    c += cod.getCodigo();
                }
                taCodigo.setText(c);
            }
            jPanel1.setBackground(Color.BLACK);
            jdCodigo.setModal(true);
            jdCodigo.pack();
            jdCodigo.setLocationRelativeTo(this);
            jdCodigo.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrió un Error! \nEs probable que usted haya Ingresado mal un Dato.", "Error", 0);
        }
    }//GEN-LAST:event_jmiCodigoActionPerformed

    private void sptamanioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sptamanioStateChanged
        CambiarTamanio();
    }//GEN-LAST:event_sptamanioStateChanged

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        //Se toma el modelo del arbol:
        DefaultTreeModel modelArbol = (DefaultTreeModel) actualT.getModel();
        //Se toma la raiz del arbol
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelArbol.getRoot();
        //Este String es la variable
        String X = jcEncapsulamiento.getSelectedItem().toString() + ":_" + jcTipoAtributo.getSelectedItem().toString() + "_" + txNombreAtributo.getText();
        for (int i = 0; i < raiz.getChildCount(); i++) {
            if (raiz.getChildAt(i).toString().equals("<Atributos>")) {
                DefaultMutableTreeNode p = new DefaultMutableTreeNode(X);
                ((DefaultMutableTreeNode) raiz.getChildAt(i)).add(p);
            }
        }
        JOptionPane.showMessageDialog(this, "Atributo Guardado.", "Atributo", 2);
        String x = "";
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        for (int i = 0; i < root.getChildCount(); i++) {
            if (root.getChildAt(i).toString().equals("<Atributos>")) {
                for (int j = 0; j < root.getChildAt(i).getChildCount(); j++) {
                    x += "" + (DefaultMutableTreeNode) root.getChildAt(i).getChildAt(j) + "\n";
                }
            }
        }
        txConfiguracion.setText("Atributos de la Clase <<" + model.getRoot() + ">>:\n" + x);
        x = "";
        txtConfiguracion.setText("Atributos:");
        txNombreAtributo.setText("");
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        DefaultTreeModel modelArbol = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelArbol.getRoot();
        String X = jcEncapsulamientoMetodo.getSelectedItem().toString() + ":_" + jcTipoMetodo.getSelectedItem().toString() + "_" + txNombreMetodo.getText();
        for (int i = 0; i < raiz.getChildCount(); i++) {
            if (raiz.getChildAt(i).toString().equals("<Metodos>")) {
                DefaultMutableTreeNode p = new DefaultMutableTreeNode(X);
                ((DefaultMutableTreeNode) raiz.getChildAt(i)).add(p);
            }
        }
        JOptionPane.showMessageDialog(this, "Método Guardado.", "Método", 2);
        String x = "";
        DefaultTreeModel model = (DefaultTreeModel) actualT.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        for (int i = 0; i < root.getChildCount(); i++) {
            if (root.getChildAt(i).toString().equals("<Metodos>")) {
                for (int j = 0; j < root.getChildAt(i).getChildCount(); j++) {
                    x += "" + (DefaultMutableTreeNode) root.getChildAt(i).getChildAt(j) + "\n";
                }
            }
        }
        txConfiguracion.setText("Métodos de la Clase <<" + model.getRoot() + ">>:\n" + x);
        x = "";
        txtConfiguracion.setText("Métodos:");
        txNombreMetodo.setText("");
    }//GEN-LAST:event_jButton4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PanelPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PanelPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PanelPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanelPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PanelPrincipal().setVisible(true);
            }
        });
    }

    //retorna un color Aleatorio
    public Color ColorAletorio() {
        int numero = (int) (Math.random() * 10) + 1;
        if (numero == 1) {
            color = Color.BLUE;
        }
        if (numero == 2) {
            color = Color.CYAN;
        }
        if (numero == 3) {
            color = Color.DARK_GRAY;
        }
        if (numero == 4) {
            color = Color.GRAY;
        }
        if (numero == 5) {
            color = Color.MAGENTA;
        }
        if (numero == 6) {
            color = Color.ORANGE;
        }
        if (numero == 7) {
            color = Color.PINK;
        }
        if (numero == 8) {
            color = Color.RED;
        }
        if (numero == 9) {
            color = Color.WHITE;
        }
        if (numero == 10) {
            color = Color.YELLOW;
        }
        return color;
    }

    public void CambiarColorComponente() {
        actual.setBackground(JColorChooser.showDialog(this, "Cambiar Color de Texto", Color.WHITE));
        this.repaint();
    }

    public void CambiarColorTexto() {
        actual.setForeground(JColorChooser.showDialog(this, "Cambiar Color de Texto", Color.WHITE));
        this.repaint();
    }

    public void EliminarComponente() {
        jpBase.remove(actual);
        txSeleccionado.setText("");
        this.repaint();
    }

    public void CambiarFuente() {
        String[] Fuentes = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
        fuente = (String) JOptionPane.showInputDialog(null, "Seleccione una Fuente:", "Fuentes", 3, null, Fuentes, Fuentes[0]);
        actual.setFont(new java.awt.Font(fuente, 1, (Integer) sptamanio.getValue()));
        this.repaint();
    }

    public void CambiarTexto() {
        String x = JOptionPane.showInputDialog(this, "Ingrese el Texto:", "Texto de Componente", 1);
        actual.setText(x);
        this.repaint();
    }

    public void CambiarTamanio() {
        actual.setFont(new java.awt.Font(fuente, 1, (Integer) sptamanio.getValue()));
        this.repaint();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelClase;
    private javax.swing.JPanel PanelFlujo;
    private javax.swing.JButton btClase;
    private javax.swing.JButton btDatos;
    private javax.swing.JButton btDesicion;
    private javax.swing.JButton btDocumento;
    private javax.swing.JButton btInicio;
    private javax.swing.JButton btNuevoDiagramaDeFlujo;
    private javax.swing.JButton btProceso;
    private javax.swing.JButton btSeparador;
    private javax.swing.JButton btSeparador1;
    private javax.swing.JButton btSeparadorV;
    private javax.swing.JButton btSeparadorV1;
    private javax.swing.JButton btSubproceso;
    private javax.swing.JButton jBTamanio;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardarCodigo;
    private javax.swing.JButton jbSetTexto;
    private javax.swing.JButton jbtDiagramaClases;
    private javax.swing.JComboBox<String> jcEncapsulamiento;
    private javax.swing.JComboBox<String> jcEncapsulamientoMetodo;
    private javax.swing.JComboBox<String> jcTipoAtributo;
    private javax.swing.JComboBox<String> jcTipoMetodo;
    private javax.swing.JDialog jdAgregarAtributo;
    private javax.swing.JDialog jdAgregarMetodo;
    private javax.swing.JDialog jdCodigo;
    private javax.swing.JDialog jdNuevo;
    private javax.swing.JMenuItem jmiAbrir;
    private javax.swing.JMenuItem jmiAcercaDe;
    private javax.swing.JMenuItem jmiAtributos;
    private javax.swing.JMenuItem jmiCambiarColor;
    private javax.swing.JMenuItem jmiCambiarFuente;
    private javax.swing.JMenuItem jmiCambiarTexto;
    private javax.swing.JMenuItem jmiCodigo;
    private javax.swing.JMenuItem jmiColorTexto;
    private javax.swing.JMenuItem jmiEliminarArbol;
    private javax.swing.JMenuItem jmiGuardar;
    private javax.swing.JMenuItem jmiGuardarComo;
    private javax.swing.JMenuItem jmiMetodos;
    private javax.swing.JMenuItem jmiNuevo;
    private javax.swing.JButton jmiPropiedades;
    private javax.swing.JPanel jpBase;
    private javax.swing.JPanel jpBase0;
    private javax.swing.JPanel jpDiseno;
    private javax.swing.JPanel jpTexto;
    private javax.swing.JLabel lbFondo;
    private javax.swing.JMenu mArchivo;
    private javax.swing.JMenu mDiseno;
    private javax.swing.JMenu mEdiciontx;
    private javax.swing.JMenuBar mbPrincipal;
    private javax.swing.JMenuItem miEliminar;
    private javax.swing.JPopupMenu ppMenu;
    private javax.swing.JPopupMenu ppMenuClases;
    private javax.swing.JSpinner sptamanio;
    private javax.swing.JTextArea taCodigo;
    private javax.swing.JTextArea txConfiguracion;
    private javax.swing.JTextField txNombreAtributo;
    private javax.swing.JTextField txNombreMetodo;
    private javax.swing.JTextField txSeleccionado;
    private javax.swing.JTextField txSeleccionado1;
    private javax.swing.JLabel txtConfiguracion;
    // End of variables declaration//GEN-END:variables
    Color color;
    String fuente = "Tahoma";
    JLabel actual = null;
    JTree actualT = null;
    DefaultMutableTreeNode nodoS;
    int tree = 1;
    int ctabla = 1;
    int proceso = 1;
    int inicio = 1;
    int subproceso = 1;
    int separador = 1;
    int separadorVertical = 1;
    int datos = 1;
    int documento = 1;
    int desicion = 1;
    ArrayList nombresdeclase = new ArrayList();
    ArrayList<JTree> clases = new ArrayList();
    int centinela;
    int clickA = 0;
    int clickM = 0;
}
